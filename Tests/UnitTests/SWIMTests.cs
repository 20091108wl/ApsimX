// -----------------------------------------------------------------------
// <copyright file="SWIMTests.cs" company="APSIM Initiative">
//     Copyright (c) APSIM Initiative
// </copyright>
//
using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using SWIMFrame;

namespace UnitTests
{
    /// <summary>
    /// A suite of tests for the SWIM framework.
    /// All input and output values were retrieved from FORTRAN version using WRITE statements
    /// at start and end of method.
    /// </summary>
    [TestFixture]
    class SWIMTests
    {
        /// <summary>
        /// Test method nonlin.
        /// </summary>
        [Test]
        public void TestNonlin()
        {
            int[] n = new int[] { 23, 23, 23, 23 };
            double[][] x = new double[][] { new double[] { 0,3.354301E-06, 9.062281E-06, 2.211101E-05, 5.405671E-05, 1.286441E-04, 3.034657E-04, 7.068768E-04, 1.632747E-03, 3.740277E-03, 8.510290E-03, 1.924374E-02, 4.327070E-02, 9.674788E-02, 2.148795E-01, 4.724994E-01, 1.019938E+00, 2.120870E+00, 4.103255E+00, 7.062010E+00, 1.052146E+01, 1.373546E+01, 1.628369E+01, 1.813795E+01 },
                                            new double[] { 0, 3.354301E-06,9.062281E-06,2.211101E-05,5.405671E-05,1.286441E-04,3.034657E-04,7.068768E-04,1.632747E-03,3.740277E-03,8.510290E-03,1.924374E-02,4.327070E-02,9.674788E-02,2.148795E-01,4.724994E-01,1.019938E+00,2.120870E+00,4.103255E+00,7.062010E+00,1.052146E+01,1.373546E+01,1.628369E+01,1.813795E+01 },
                                            new double[] { 0, 1.740164E-06,5.488312E-06,1.750446E-05,5.750873E-05,1.811315E-04,5.503100E-04,1.607630E-03,4.531185E-03,1.234010E-02,3.249982E-02,8.262891E-02,2.015138E-01,4.644696E-01,9.847437E-01,1.851519E+00,3.002137E+00,4.207595E+00,5.252194E+00,6.054463E+00,6.631843E+00,7.034421E+00,7.311037E+00,7.49985218 },
                                            new double[] { 0, 1.740164E-06,5.488312E-06,1.750446E-05,5.750873E-05,1.811315E-04,5.503100E-04,1.607630E-03,4.531185E-03,1.234010E-02,3.249982E-02,8.262891E-02,2.015138E-01,4.644696E-01,9.847437E-01,1.851519E+00,3.002137E+00,4.207595E+00,5.252194E+00,6.054463E+00,6.631843E+00,7.034421E+00,7.311037E+00,7.49985218 }
                                          };
            double[][] y = new double[][] { new double[] { 0, 8.740528E-10, -1.139631E-06, -3.745951E-06, -1.012318E-05, -2.500095E-05, -5.983057E-05, -1.400616E-04, -3.237275E-04, -7.402293E-04, -1.677716E-03, -3.770240E-03, -8.399180E-03, -1.852487E-02, -4.033605E-02, -8.621387E-02, -1.789396E-01, -3.537897E-01, -6.472698E-01, -1.061788E+00, -1.537311E+00, -1.986433E+00, -2.354419E+00, -2.631054E+00 },
                                            new double[] { 0, 8.740528E-10,-5.688333E-07,-1.870282E-06,-5.052952E-06,-1.247203E-05,-2.981977E-05,-6.971090E-05,-1.607958E-04,-3.665741E-04,-8.272015E-04,-1.847065E-03,-4.076566E-03,-8.869883E-03,-1.893890E-02,-3.937207E-02,-7.867789E-02,-1.482514E-01,-2.571233E-01,-4.019165E-01,-5.627090E-01,-7.143035E-01,-8.406170E-01,-0.937671313 },
                                            new double[] { 0, 4.534462E-10,-1.860098E-07,-7.827367E-07,-2.763741E-06,-8.861448E-06,-2.696707E-05,-7.839762E-05,-2.189419E-04,-5.880709E-04,-1.518430E-03,-3.755019E-03,-8.819437E-03,-1.937167E-02,-3.886927E-02,-6.938366E-02,-1.084229E-01,-1.492204E-01,-1.853670E-01,-2.139873E-01,-2.351721E-01,-2.502733E-01,-0.260818333,-0.268098632 },
                                            new double[] { 0, 4.534462E-10,-1.235415E-07,-5.200053E-07,-1.834312E-06,-5.871893E-06,-1.782608E-05,-5.164364E-05,-1.435129E-04,-3.827704E-04,-9.785819E-04,-2.386859E-03,-5.502670E-03,-1.180372E-02,-2.305212E-02,-4.009008E-02,-6.140720E-02,-8.352305E-02,-1.032118E-01,-1.189630E-01,-1.307495E-01,-1.392288E-01,-0.145191196,-0.149328616 }
                                          };
            double[] re = new double[] { 1E-2, 1E-2, 1E-2, 1E-2 };
            int[] expected = new int[] { 9, 7, 5, 4 };

            for (int i = 0; i < n.Length; i++)
                Assert.AreEqual(expected[i], (int)Extensions.TestMethod("Fluxes", "nonlin", new object[] { n[i], x[i], y[i], re[i] }));
        }

        /// <summary>
        /// Test method odef.
        /// </summary>
        [Test]
        public void TestOdef()
        {
            int[] n1 = new int[] { 1, 1, 1, 20 };
            int[] n2 = new int[] { 2, 2, 12, 23 };
            MVG.TestParams(103, 9.0, 0.99670220130280185, 9.99999999999998460E-003);
            SoilProps sp = Soil.gensptbl(1.0, new SoilParam(10, 103, 0.4, 2.0, -2.0, -10.0, 1.0 / 3.0, 1.0), true);
            double[][] aK = new double[][] {new double[] { 0,8.740528E-10,3.148991E-09,1.116638E-08,3.906024E-08,1.350389E-07,4.621461E-07,1.567779E-06,5.278070E-06,1.765091E-05,5.868045E-05,1.940329E-04,6.381824E-04,2.086113E-03,6.757548E-03,2.152482E-02,6.618264E-02,1.887549E-01,4.655217E-01,9.153457E-01,1.393520E+00,1.733586E+00,1.916091084,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
                                            new double[] { 0,8.740528E-10,3.148991E-09,1.116638E-08,3.906024E-08,1.350389E-07,4.621461E-07,1.567779E-06,5.278070E-06,1.765091E-05,5.868045E-05,1.940329E-04,6.381824E-04,2.086113E-03,6.757548E-03,2.152482E-02,6.618264E-02,1.887549E-01,4.655217E-01,9.153457E-01,1.393520E+00,1.733586E+00,1.916091E+00,2.000000E+00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            new double[] { 0,8.740528E-10,3.148991E-09,1.116638E-08,3.906024E-08,1.350389E-07,4.621461E-07,1.567779E-06,5.278070E-06,1.765091E-05,5.868045E-05,1.940329E-04,6.381824E-04,2.086113E-03,6.757548E-03,2.152482E-02,6.618264E-02,1.887549E-01,4.655217E-01,9.153457E-01,1.393520E+00,1.733586E+00,1.916091E+00,2.000000E+00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            new double[] { 0,8.740528E-10,3.148991E-09,1.116638E-08,3.906024E-08,1.350389E-07,4.621461E-07,1.567779E-06,5.278070E-06,1.765091E-05,5.868045E-05,1.940329E-04,6.381824E-04,2.086113E-03,6.757548E-03,2.152482E-02,6.618264E-02,1.887549E-01,4.655217E-01,9.153457E-01,1.393520E+00,1.733586E+00,1.916091E+00,2.000000E+00,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
                                            };
            double[][] hpK = new double[][] {new double[] { 0,1.942348E-09, 6.760092E-09, 2.390674E-08, 8.260039E-08, 2.837631E-07, 9.641152E-07, 3.252644E-06, 1.089420E-05, 3.627295E-05, 1.201039E-04, 3.956002E-04, 1.295509E-03, 4.209049E-03, 1.348672E-02, 4.200805E-02, 1.232292E-01, 3.212703E-01, 6.904247E-01, 1.165940E+00, 1.578200E+00, 1.834723657, 1.963039316, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                                              new double[] { 0, 1.942348E-09,6.760092E-09,2.390674E-08,8.260039E-08,2.837631E-07,9.641152E-07,3.252644E-06,1.089420E-05,3.627295E-05,1.201039E-04,3.956002E-04,1.295509E-03,4.209049E-03,1.348672E-02,4.200805E-02,1.232292E-01,3.212703E-01,6.904247E-01,1.165940E+00,1.578200E+00,1.834724E+00,1.963039E+00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                              new double[] { 0, 1.942348E-09,6.760092E-09,2.390674E-08,8.260039E-08,2.837631E-07,9.641152E-07,3.252644E-06,1.089420E-05,3.627295E-05,1.201039E-04,3.956002E-04,1.295509E-03,4.209049E-03,1.348672E-02,4.200805E-02,1.232292E-01,3.212703E-01,6.904247E-01,1.165940E+00,1.578200E+00,1.834724E+00,1.963039E+00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                              new double[] { 0, 1.942348E-09,6.760092E-09,2.390674E-08,8.260039E-08,2.837631E-07,9.641152E-07,3.252644E-06,1.089420E-05,3.627295E-05,1.201039E-04,3.956002E-04,1.295509E-03,4.209049E-03,1.348672E-02,4.200805E-02,1.232292E-01,3.212703E-01,6.904247E-01,1.165940E+00,1.578200E+00,1.834724E+00,1.963039E+00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
                                            };
            double[] q = new double[] { -1.14159583972650572E-006, -1.13962742977647588E-006, -8.45438166835797700E-003, 5.8328882050874018 };
            double[][] aphi = new double[][] { new double[] { 0, 3.3543015E-06, 9.0622807E-06, 2.2111013E-05, 5.4056705E-05, 1.2864407E-04, 3.0346573E-04, 7.0687680E-04, 1.6327475E-03, 3.7402771E-03, 8.5102897E-03, 1.9243740E-02, 4.3270700E-02, 9.6747883E-02, 2.1487948E-01, 4.7249940E-01, 1.0199381E+00, 2.1208696E+00, 4.1032548E+00, 7.0620103E+00, 1.0521457E+01, 1.3735456E+01, 1.6283688E+01, 1.8137953E+01, 4.2939399E-04, 6.3818238E-04, 9.4785745E-04, 1.4067647E-03, 2.0861126E-03, 3.0905222E-03, 4.5732025E-03, 6.7575474E-03, 9.9674173E-03, 1.4668721E-02, 2.1524818E-02, 3.1467102E-02, 4.5778772E-02, 6.6182640E-02, 9.4910939E-02, 1.3471563E-01, 1.8875489E-01, 2.6027737E-01, 3.5204545E-01, 4.6552172E-01, 5.9999630E-01, 7.5199532E-01, 9.1534568E-01, 1.0820619E+00, 1.2438267E+00, 1.3935198E+00, 1.5262516E+00, 1.6396606E+00, 1.7335856E+00, 1.8094147E+00, 1.8693977E+00, 1.9160911E+00, 1.9519905E+00, 1.9793297E+00, 2.0000000E+00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                                               new double[] { 0, 3.3543015E-06,9.0622807E-06,2.2111013E-05,5.4056705E-05,1.2864407E-04,3.0346573E-04,7.0687680E-04,1.6327475E-03,3.7402771E-03,8.5102897E-03,1.9243740E-02,4.3270700E-02,9.6747883E-02,2.1487948E-01,4.7249940E-01,1.0199381E+00,2.1208696E+00,4.1032548E+00,7.0620103E+00,1.0521457E+01,1.3735456E+01,1.6283688E+01,1.8137953E+01,4.2939399E-04,6.3818238E-04,9.4785745E-04,1.4067647E-03,2.0861126E-03,3.0905222E-03,4.5732025E-03,6.7575474E-03,9.9674173E-03,1.4668721E-02,2.1524818E-02,3.1467102E-02,4.5778772E-02,6.6182640E-02,9.4910939E-02,1.3471563E-01,1.8875489E-01,2.6027737E-01,3.5204545E-01,4.6552172E-01,5.9999630E-01,7.5199532E-01,9.1534568E-01,1.0820619E+00,1.2438267E+00,1.3935198E+00,1.5262516E+00,1.6396606E+00,1.7335856E+00,1.8094147E+00,1.8693977E+00,1.9160911E+00,1.9519905E+00,1.9793297E+00,2.0000000E+00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                               new double[] { 0, 3.3543015E-06,9.0622807E-06,2.2111013E-05,5.4056705E-05,1.2864407E-04,3.0346573E-04,7.0687680E-04,1.6327475E-03,3.7402771E-03,8.5102897E-03,1.9243740E-02,4.3270700E-02,9.6747883E-02,2.1487948E-01,4.7249940E-01,1.0199381E+00,2.1208696E+00,4.1032548E+00,7.0620103E+00,1.0521457E+01,1.3735456E+01,1.6283688E+01,1.8137953E+01,4.2939399E-04,6.3818238E-04,9.4785745E-04,1.4067647E-03,2.0861126E-03,3.0905222E-03,4.5732025E-03,6.7575474E-03,9.9674173E-03,1.4668721E-02,2.1524818E-02,3.1467102E-02,4.5778772E-02,6.6182640E-02,9.4910939E-02,1.3471563E-01,1.8875489E-01,2.6027737E-01,3.5204545E-01,4.6552172E-01,5.9999630E-01,7.5199532E-01,9.1534568E-01,1.0820619E+00,1.2438267E+00,1.3935198E+00,1.5262516E+00,1.6396606E+00,1.7335856E+00,1.8094147E+00,1.8693977E+00,1.9160911E+00,1.9519905E+00,1.9793297E+00,2.0000000E+00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                               new double[] { 0, 3.3543015E-06,9.0622807E-06,2.2111013E-05,5.4056705E-05,1.2864407E-04,3.0346573E-04,7.0687680E-04,1.6327475E-03,3.7402771E-03,8.5102897E-03,1.9243740E-02,4.3270700E-02,9.6747883E-02,2.1487948E-01,4.7249940E-01,1.0199381E+00,2.1208696E+00,4.1032548E+00,7.0620103E+00,1.0521457E+01,1.3735456E+01,1.6283688E+01,1.8137953E+01,2.2137953E+01,3.0137953E+01,4.2137953E+01,5.8137953E+01,7.8137953E+01,1.0213795E+02,1.3013795E+02,6.7575474E-03,9.9674173E-03,1.4668721E-02,2.1524818E-02,3.1467102E-02,4.5778772E-02,6.6182640E-02,9.4910939E-02,1.3471563E-01,1.8875489E-01,2.6027737E-01,3.5204545E-01,4.6552172E-01,5.9999630E-01,7.5199532E-01,9.1534568E-01,1.0820619E+00,1.2438267E+00,1.3935198E+00,1.5262516E+00,1.6396606E+00,1.7335856E+00,1.8094147E+00,1.8693977E+00,1.9160911E+00,1.9519905E+00,1.9793297E+00,2.0000000E+00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
                                             };
            double[][] u = new double[][] { new double[] { 0, 4.9914082920553025, 4364796.0347727695 },
                                            new double[] { 0, 5.0000148144063985, 4379861.1673235269 },
                                            new double[] { 0, 4.9682912374903765, 570.76826254349544 },
                                            new double[] { 0, -1.8708427784692783, 0.46037822906582598}
                                          };

            for (int i = 0; i < n1.Length; i++)
            {
                Fluxes.SetupOdef(q[i], aphi[i]);
                double[] res = (double[])Extensions.TestMethod("Fluxes", "odef", new object[] { n1[i], n2[i], aK[i], hpK[i] });
                for (int j=0;j< 2;j++)
                    Assert.AreEqual(u[i][j], res[j], Math.Abs(u[i][j]) * 1E-4);
            }
        }

        /// <summary>
        /// Test method MVG.Params
        /// </summary>
        [Test]
        public void TestMVGParams()
        {
            Assert.AreEqual(true, MVG.TestParams(103, 9.0, 0.99670220130280185, 9.99999999999998460E-003));
            Assert.AreEqual(true, MVG.TestParams(109, 21.0, 0.99990576371017859, 0.25132106297918300));
        }

        /// <summary>
        /// Test method gensptbl
        /// </summary>
        [Test]
        public void TestGensptbl()
        {
            MVG.TestParams(103, 9.0, 0.99670220130280185, 9.99999999999998460E-003);
            SoilProps sp = Soil.gensptbl(1.0, new SoilParam(10, 103, 0.4, 2.0, -2.0, -10.0, 1.0 / 3.0, 1.0), true);
            Assert.AreEqual(103, sp.sid);
            Assert.AreEqual(16, sp.nld);
            Assert.AreEqual(67, sp.n);
            Assert.AreEqual(23, sp.nc);
            Assert.AreEqual(0.4, sp.ths);
            Assert.AreEqual(2.0, sp.ks);
            Assert.AreEqual(-2.0, sp.he);
            Assert.AreEqual(18.137953, sp.phie, 0.0001);

            double[] sd = new double[] { 0, 0, 1.681505E-03, 3.641995E-03, 5.927758E-03, 8.592762E-03, 1.169993E-02, 1.532262E-02, 1.954637E-02, 2.447089E-02, 3.021248E-02, 3.690667E-02, 4.471152E-02, 5.381131E-02, 6.442088E-02, 7.679074E-02, 9.121293E-02 };
            double[] lnh = new double[] { 0, 1.611810E+01, 1.565758E+01, 1.519706E+01, 1.473655E+01, 1.427603E+01, 1.381551E+01, 1.335499E+01, 1.289448E+01, 1.243396E+01, 1.197344E+01, 1.151293E+01, 1.105241E+01, 1.059189E+01, 1.013137E+01, 9.670857E+00, 9.210341E+00 };
            double[] S = new double[] { 0, 9.12129283E-02, 9.56676379E-02, 0.10031816, 0.10517308, 0.11024141, 0.11553251, 0.12105618, 0.12682264, 0.13284256, 0.13912708, 0.14568783, 0.15253696, 0.15968712, 0.16715157, 0.17494409, 0.18307911, 0.19157168, 0.20043752, 0.20969297, 0.21935518, 0.22944199, 0.239972, 0.25096464, 0.26244017, 0.27441967, 0.28692514, 0.29997942, 0.31360632, 0.32783052, 0.34267759, 0.35817391, 0.37434664, 0.39122367, 0.40883315, 0.42720348, 0.44636273, 0.46633807, 0.48715466, 0.50883472, 0.53139526, 0.55484605, 0.57918596, 0.60439837, 0.6304453, 0.65725988, 0.68473697, 0.7127229, 0.74100459, 0.7693013, 0.79726136, 0.82446897, 0.85046542, 0.8747865, 0.89701217, 0.91681963, 0.93402398, 0.94859558, 0.96064913, 0.97040969, 0.97816873, 0.98424155, 0.98893458, 0.99252462, 0.99524909, 0.9973039, 0.99884635, 1 };
            double[] h = new double[] { 0, -10000, -8789.3145, -7725.2046, -6789.9253, -5967.8789, -5245.3564, -4610.3086, -4052.1453, -3561.5579, -3130.3652, -2751.3765, -2418.2712, -2125.4946, -1868.1639, -1641.988, -1443.1949, -1268.4694, -1114.8977, -979.91858, -861.28125, -757.0072, -665.35742, -584.80353, -514.0022, -451.77271, -397.07724, -349.00366, -306.75031, -269.61249, -236.97089, -208.28116, -183.06487, -160.90146, -141.42136, -124.29967, -109.25089, -96.024048, -84.398552, -74.180542, -65.199608, -57.305988, -50.368034, -44.27005, -38.910336, -34.19952, -30.059032, -26.419828, -23.221218, -20.409859, -17.938866, -15.767034, -13.858142, -12.180356, -10.705698, -9.4095745, -8.2703714, -7.2690892, -6.3890309, -5.61552, -4.9356575, -4.3381042, -3.8128963, -3.3512745, -2.9455404, -2.5889282, -2.2754903, -2 };
            double[] phi = new double[] { 0, 3.354302E-06, 4.899393E-06, 6.444484E-06, 9.062281E-06, 1.204212E-05, 1.657599E-05, 2.211101E-05, 3.004768E-05, 4.010838E-05, 5.405671E-05, 7.209357E-05, 9.661269E-05, 1.286441E-04, 1.716715E-04, 2.281573E-04, 3.034657E-04, 4.025267E-04, 5.339402E-04, 7.068768E-04, 9.354911E-04, 1.236225E-03, 1.632747E-03, 2.153942E-03, 2.839742E-03, 3.740277E-03, 4.923224E-03, 6.474925E-03, 8.510290E-03, 1.117724E-02, 1.467093E-02, 1.924374E-02, 2.522673E-02, 3.304893E-02, 4.327070E-02, 5.661828E-02, 7.403654E-02, 9.674788E-02, 1.263353E-01, 1.648382E-01, 2.148795E-01, 2.798114E-01, 3.638957E-01, 4.724994E-01, 6.123074E-01, 7.915112E-01, 1.019938E+00, 1.309025E+00, 1.671536E+00, 2.120870E+00, 2.669820E+00, 3.328741E+00, 4.103255E+00, 4.991914E+00, 5.984547E+00, 7.062010E+00, 8.197802E+00, 9.361253E+00, 1.052146E+01, 1.165079E+01, 1.272727E+01, 1.373546E+01, 1.466618E+01, 1.551554E+01, 1.628369E+01, 1.697354E+01, 1.758975E+01, 1.813795E+01 };
            double[] sc = new double[] { 0, 9.121293E-02, 1.051731E-01, 1.210562E-01, 1.391271E-01, 1.596871E-01, 1.830791E-01, 2.096930E-01, 2.399720E-01, 2.744197E-01, 3.136063E-01, 3.581739E-01, 4.088332E-01, 4.663381E-01, 5.313953E-01, 6.043984E-01, 6.847370E-01, 7.693013E-01, 8.504654E-01, 9.168196E-01, 9.606491E-01, 9.842416E-01, 9.952491E-01, 1.000000E+00 };
            double[] hc = new double[] { 0, -10000, -6789.9253, -4610.3086, -3130.3652, -2125.4946, -1443.1949, -979.91858, -665.35742, -451.77271, -306.75031, -208.28116, -141.42136, -96.024048, -65.199608, -44.27005, -30.059032, -20.409859, -13.858142, -9.4095745, -6.3890309, -4.3381042, -2.9455404, -2 };
            double[] kc = new double[] { 0, 8.740528E-10, 3.148991E-09, 1.116638E-08, 3.906024E-08, 1.350389E-07, 4.621461E-07, 1.567779E-06, 5.278070E-06, 1.765091E-05, 5.868045E-05, 1.940329E-04, 6.381824E-04, 2.086113E-03, 6.757548E-03, 2.152482E-02, 6.618264E-02, 1.887549E-01, 4.655217E-01, 9.153457E-01, 1.393520E+00, 1.733586E+00, 1.916091E+00, 2.000000E+00 };
            double[] phic = new double[] { 0, 3.354302E-06, 9.062281E-06, 2.211101E-05, 5.405671E-05, 1.286441E-04, 3.034657E-04, 7.068768E-04, 1.632747E-03, 3.740277E-03, 8.510290E-03, 1.924374E-02, 4.327070E-02, 9.674788E-02, 2.148795E-01, 4.724994E-01, 1.019938E+00, 2.120870E+00, 4.103255E+00, 7.062010E+00, 1.052146E+01, 1.373546E+01, 1.628369E+01, 1.813795E+01 };
            double[,] kco = new double[,] { {0, 1.7065236E-04,5.8079371E-04,6.4858364E-04,1.0662106E-03,1.4816632E-03,2.2123414E-03,3.2065664E-03,4.7137463E-03,6.8938150E-03,1.0113389E-02,1.4823619E-02,2.1733435E-02,3.1813398E-02,4.6386257E-02,6.6936351E-02,9.4217546E-02,1.2541132E-01,1.4951368E-01,1.4989966E-01,1.2351422E-01,8.7159574E-02,5.6167781E-02},
                                            {0, 1.0279558E+02,-1.0950004E+01,1.1631827E+01,2.4742544E+00,2.8009834E+00,1.4297020E+00,1.0055914E+00,6.1984211E-01,4.0856281E-01,2.6370642E-01,1.7302954E-01,1.1327697E-01,7.4349478E-02,4.8458178E-02,3.0956652E-02,1.8661717E-02,9.5462967E-03,2.5446513E-03,-2.4338358E-03,-5.1836846E-03,-6.1152456E-03,-6.0416404E-03},
                                            {0, -1.1014180E+07,1.0366468E+06,-1.4404853E+05,6.4776963E+03,-3.2800042E+03,-2.9733185E+02,-1.5195483E+02,-3.3613876E+01,-1.0596748E+01,-2.8950191E+00,-8.5836959E-01,-2.5019225E-01,-7.5391494E-02,-2.3326242E-02,-7.6989252E-03,-2.8280986E-03,-1.2017451E-03,-5.7243282E-04,-2.7216660E-04,-1.0127943E-04,6.7689198E-06,8.3435050E-05}};
            double[,] phico = new double[,] { {0, 4.2191087E-04,4.1490054E-04,1.3055570E-03,2.3527991E-03,5.1783756E-03,1.0292188E-02,2.1083130E-02,4.2141590E-02,8.4298037E-02,1.6711499E-01,3.3009821E-01,6.4871347E-01,1.2700446E+00,2.4763455E+00,4.8074398E+00,9.2763567E+00,1.7721508E+01,3.3268780E+01,6.0792885E+01,1.0763366E+02,1.8568622E+02,3.1537164E+02},
                                              {0, -2.4310675E-02,3.8141381E-02,6.0423445E-03,5.9675306E-02,6.9302924E-02,1.5162292E-01,2.4482536E-01,4.4526318E-01,7.6159847E-01,1.3289092E+00,2.2842703E+00,3.9328730E+00,6.7402439E+00,1.1553151E+01,1.9836424E+01,3.4366638E+01,6.0912647E+01,1.1351585E+02,2.3255156E+02,5.5494055E+02,1.5991620E+03,5.4331401E+03},
                                              {0, 1.6745514E+00,-7.8944385E-01,1.0811266E+00,1.1368366E-01,1.2318650E+00,1.1724924E+00,2.2706239E+00,3.1186645E+00,4.9380713E+00,7.2972093E+00,1.1092872E+01,1.6658104E+01,2.5343624E+01,3.9240189E+01,6.3999161E+01,1.1694948E+02,2.6701154E+02,8.6063892E+02,4.1353701E+03,2.7854828E+04,2.3281722E+05,2.1759720E+06} };
            double[,] sco = new double[,] { {0, 2.5533308E+03,2.0056914E+03,7.8741882E+02,4.0971344E+02,1.9202237E+02,9.5473686E+01,4.6876476E+01,2.3405447E+01,1.1715723E+01,5.9086218E+00,2.9925590E+00,1.5229950E+00,7.7818018E-01,3.9929438E-01,2.0587862E-01,1.0690963E-01,5.6183353E-02,3.0120693E-02,1.6610587E-02,9.4413562E-03,5.4934365E-03,3.2404163E-03},
                                            {0, 2.9967674E+08,-1.1468523E+08,-7.9083850E+06,-2.7884513E+06,-4.6288494E+05,-1.0656199E+05,-2.1770463E+04,-4.7983735E+03,-1.0442969E+03,-2.3284184E+02,-5.2216114E+01,-1.1861020E+01,-2.7212012E+00,-6.3357753E-01,-1.5097752E-01,-3.7651472E-02,-1.0281163E-02,-3.3105509E-03,-1.3610598E-03,-7.3612464E-04,-4.9844378E-04,-3.8756459E-04},
                                            {0,-5.5804049E+13,4.1582275E+12,3.0274222E+10,1.3287194E+10,7.4289587E+08,8.2872184E+07,6.9799375E+06,6.8719806E+05,6.5081379E+04,6.4474155E+03,6.4173175E+02,6.5254692E+01,6.7357335E+00,7.1273834E-01,7.8501269E-02,9.3673207E-03,1.3080738E-03,2.3997620E-04,6.4125285E-05,2.5660553E-05,1.4844732E-05,1.1743321E-05} };

            for (int i = 1; i < 17; i++)
            {
                Assert.AreEqual(sd[i], sp.Sd[i], 0.00001);
                Assert.AreEqual(lnh[i], sp.lnh[i], 0.00001);
            }
            for (int i = 1; i < 67; i++)
            {
                Assert.AreEqual(S[i], sp.S[i], 0.00001);
                Assert.AreEqual(h[i], sp.h[i], 0.001);
                Assert.AreEqual(phi[i], sp.phi[i], 0.00001);
            }
            for (int i = 1; i < 24; i++)
            {
                Assert.AreEqual(sc[i], sp.Sc[i], 0.00001);
                Assert.AreEqual(hc[i], sp.hc[i], 0.0001);
                Assert.AreEqual(kc[i], sp.Kc[i], 0.0001);
                Assert.AreEqual(phic[i], sp.phic[i], 0.00001);
            }
            for (int i = 0; i < 3; i++)
                for (int j = 1; j < 23; j++)
                {
                    Assert.AreEqual(kco[i, j], sp.Kco[i, j], Math.Abs(sp.Kco[i, j] * (1.0 / 100000.0)));
                    Assert.AreEqual(phico[i, j], sp.phico[i, j], Math.Abs(sp.phico[i, j] * (1.0 / 100000.0)));
                    Assert.AreEqual(sco[i, j], sp.Sco[i, j], Math.Abs(sco[i, j] * (1.0 / 100000.0)));
                }

            MVG.TestParams(109, 21.0, 0.99990576371017859, 0.25132106297918300);
            sp = Soil.gensptbl(1.0, new SoilParam(10, 109, 0.6, 0.2, -2.0, -40.0, 1.0 / 9.0, 1.0), true);
            Assert.AreEqual(109, sp.sid);
            Assert.AreEqual(16, sp.nld);
            Assert.AreEqual(67, sp.n);
            Assert.AreEqual(23, sp.nc);
            Assert.AreEqual(0.6, sp.ths);
            Assert.AreEqual(0.2, sp.ks);
            Assert.AreEqual(-2.0, sp.he);
            Assert.AreEqual(7.4998522, sp.phie, 0.0001);

            sd = new double[] { 0, 0, 1.762584E-02, 3.617703E-02, 5.570216E-02, 7.625236E-02, 9.788146E-02, 1.206461E-01, 1.446059E-01, 1.698235E-01, 1.963652E-01, 2.243003E-01, 2.537019E-01, 2.846472E-01, 3.172170E-01, 3.514968E-01, 3.875760E-01 };
            lnh = new double[] { 0, 1.611810E+01, 1.565758E+01, 1.519706E+01, 1.473655E+01, 1.427603E+01, 1.381551E+01, 1.335499E+01, 1.289448E+01, 1.243396E+01, 1.197344E+01, 1.151293E+01, 1.105241E+01, 1.059189E+01, 1.013137E+01, 9.670857E+00, 9.210341E+00 };
            S = new double[] { 0, 0.38757604, 0.39802191, 0.4086186, 0.41936827, 0.43027312, 0.44133538, 0.4525573, 0.46394116, 0.4754892, 0.48720375, 0.49908715, 0.51114172, 0.52336979, 0.53577358, 0.54835546, 0.56111759, 0.57406211, 0.58719105, 0.60050613, 0.61400896, 0.62770075, 0.64158225, 0.65565348, 0.66991365, 0.68436086, 0.6989916, 0.71380019, 0.72877842, 0.74391448, 0.75919175, 0.77458793, 0.79007274, 0.80560666, 0.82113814, 0.83660144, 0.85191458, 0.86697733, 0.88167113, 0.89586055, 0.90939844, 0.92213374, 0.93392366, 0.94464731, 0.95421922, 0.96259916, 0.96979564, 0.97586316, 0.9808923, 0.98499763, 0.98830467, 0.99093872, 0.99301726, 0.99464488, 0.9959116, 0.99689269, 0.99764961, 0.99823189, 0.99867868, 0.99902099, 0.99928284, 0.99948293, 0.9996357, 0.99975228, 0.99984115, 0.99990898, 0.9999606, 1 };
            h = new double[] { 0, -10000, -8789.3145, -7725.2046, -6789.9253, -5967.8789, -5245.3564, -4610.3086, -4052.1453, -3561.5579, -3130.3652, -2751.3765, -2418.2712, -2125.4946, -1868.1639, -1641.988, -1443.1949, -1268.4694, -1114.8977, -979.91858, -861.28125, -757.0072, -665.35742, -584.80353, -514.0022, -451.77271, -397.07724, -349.00366, -306.75031, -269.61249, -236.97089, -208.28116, -183.06487, -160.90146, -141.42136, -124.29967, -109.25089, -96.024048, -84.398552, -74.180542, -65.199608, -57.305988, -50.368034, -44.27005, -38.910336, -34.19952, -30.059032, -26.419828, -23.221218, -20.409859, -17.938866, -15.767034, -13.858142, -12.180356, -10.705698, -9.4095745, -8.2703714, -7.2690892, -6.3890309, -5.61552, -4.9356575, -4.3381042, -3.8128963, -3.3512745, -2.9455404, -2.5889282, -2.2754903, -2 };
            phi = new double[] { 0, 1.7401640E-06, 2.6657353E-06, 3.5913070E-06, 5.4883117E-06, 7.8675603E-06, 1.1926967E-05, 1.7504462E-05, 2.6268050E-05, 3.8727889E-05, 5.7508729E-05, 8.4476204E-05, 1.2416691E-04, 1.8113150E-04, 2.6366173E-04, 3.8153859E-04, 5.5031001E-04, 7.8978430E-04, 1.1293123E-03, 1.6076304E-03, 2.2799443E-03, 3.2201693E-03, 4.531185E-03, 6.351236E-03, 8.869621E-03, 1.234010E-02, 1.710553E-02, 2.362251E-02, 3.249982E-02, 4.453956E-02, 6.079444E-02, 8.262891E-02, 0.11179515, 0.15050687, 0.20151381, 0.26814798, 0.35432744, 0.46446955, 0.60328245, 0.77538371, 0.98474365, 1.2339785, 1.523618, 1.8515186, 2.2126453, 2.5993474, 3.0021374, 3.4107835, 3.8154471, 4.2075949, 4.5805526, 4.9296689, 5.2521939, 5.5469718, 5.8140793, 6.0544629, 6.2696362, 6.4614353, 6.6318431, 6.7828636, 6.9164438, 7.034421, 7.1384988, 7.2302341, 7.3110371, 7.382174, 7.4447765, 7.4998522 };
            sc = new double[] { 0, 0.38757604, 0.41936827, 0.4525573, 0.48720375, 0.52336979, 0.56111759, 0.60050613, 0.64158225, 0.68436086, 0.72877842, 0.77458793, 0.82113814, 0.86697733, 0.90939844, 0.94464731, 0.96979564, 0.98499763, 0.99301726, 0.99689269, 0.99867868, 0.99948293, 0.99984115, 1 };
            hc = new double[] { 0, -10000, -6789.9253, -4610.3086, -3130.3652, -2125.4946, -1443.1949, -979.91858, -665.35742, -451.77271, -306.75031, -208.28116, -141.42136, -96.024048, -65.199608, -44.27005, -30.059032, -20.409859, -13.858142, -9.4095745, -6.3890309, -4.3381042, -2.9455404, -2 };
            kc = new double[] { 0, 4.5344617E-10, 2.3743072E-09, 1.1753716E-08, 5.5329043E-08, 2.4889215E-07, 1.0743893E-06, 4.4657668E-06, 1.7919621E-05, 6.9505441E-05, 2.6033705E-04, 9.3651534E-04, 3.1898513E-03, 9.9814255E-03, 2.7218757E-02, 6.0491391E-02, 1.0503040E-01, 1.4560257E-01, 1.7263249E-01, 1.8734698E-01, 1.9452323E-01, 1.9783939E-01, 1.9933397E-01, 2.0000000E-01 };
            phic = new double[] { 0, 1.7401640E-06, 5.4883117E-06, 1.7504462E-05, 5.7508729E-05, 1.8113150E-04, 5.5031001E-04, 1.6076304E-03, 4.5311847E-03, 1.2340101E-02, 3.2499816E-02, 8.2628906E-02, 2.0151381E-01, 4.6446955E-01, 9.8474365E-01, 1.8515186E+00, 3.0021374E+00, 4.2075949E+00, 5.2521939E+00, 6.0544629E+00, 6.6318431E+00, 7.0344210E+00, 7.3110371E+00, 7.4998522E+00 };
            kco = new double[,] { {0, 1.5227226E-04,7.3766423E-04,8.3584001E-04,1.2871395E-03,1.7977869E-03,2.5976312E-03,3.7176549E-03,5.3458442E-03,7.6736873E-03,1.0991316E-02,1.5616902E-02,2.1780169E-02,2.9176226E-02,3.6171995E-02,3.9565440E-02,3.6972564E-02,2.9837649E-02,2.1724641E-02,1.4917891E-02,9.9479603E-03,6.5431832E-03,4.2771096E-03},
                                  {0, 2.7579688E+02,-1.3831285E+01,1.0314801E+01,2.4263067E+00,1.5067874E+00,6.8806851E-01,3.6473933E-01,1.9182637E-01,1.0534669E-01,5.8785554E-02,3.3217445E-02,1.8490892E-02,9.5809121E-03,3.8562873E-03,6.8902707E-05,-2.3098458E-03,-3.6002519E-03,-4.1623102E-03,-4.3207356E-03,-4.2876173E-03,-4.1706106E-03,-4.0233247E-03},
                                  {0, -4.7941888E+07,1.4481920E+06,-9.9484430E+04,-1.3957233E+03,-8.6594836E+02,-1.0521148E+02,-2.1306089E+01,-3.8994749E+00,-8.1557214E-01,-1.7885220E-01,-4.3302950E-02,-1.1781353E-02,-3.8039780E-03,-1.5011667E-03,-7.0697255E-04,-3.6546707E-04,-1.8415794E-04,-6.8739566E-05,1.7346478E-05,9.5562013E-05,1.7682239E-04,2.7953979E-04}};
            phico = new double[,] { {0, 1.1851387E-04,1.3756832E-04,6.8460242E-04,1.8676027E-03,5.6625279E-03,1.5686782E-02,4.2565540E-02,1.1098163E-01,2.8088471E-01,6.8908828E-01,1.6403812E+00,3.7775047E+00,8.3575506E+00,1.7536446E+01,3.4343792E+01,6.2246727E+01,1.0539489E+02,1.7035548E+02,2.6827866E+02,4.1703894E+02,6.4438965E+02,9.9291235E+02},
                                    {0, -4.2546061E-03,7.7001620E-03,4.5110066E-03,2.9368868E-02,6.5620005E-02,1.8506820E-01,4.5603305E-01,1.1248091E+00,2.6562076E+00,6.1284242E+00,1.3747643E+01,3.0129936E+01,6.4633461E+01,1.3685663E+02,2.9197479E+02,6.5485992E+02,1.6235507E+03,4.5421826E+03,1.4015146E+04,4.5982266E+04,1.5561583E+05,5.3538131E+05},
                                    {0, 1.3321328E-01,-2.8213441E-02,2.6137620E-01,3.7343547E-01,1.1513679E+00,2.4925144E+00,5.8535886E+00,1.2810239E+01,2.7878031E+01,5.9312584E+01,1.2624812E+02,2.7500134E+02,6.4746033E+02,1.7945167E+03,6.4302910E+03,3.0697492E+04,1.8410950E+05,1.2686408E+06,9.3964540E+06,7.2001096E+07,5.6065018E+08,4.3936440E+09}};
            sco = new double[,] { {0, 1.0227699E+04,5.5435820E+03,1.4890962E+03,5.1253589E+02,1.7310504E+02,6.2165543E+01,2.3001612E+01,8.8281174E+00,3.4944146E+00,1.4265225E+00,6.0046798E-01,2.6147828E-01,1.1867946E-01,5.6884490E-02,2.9227737E-02,1.6206026E-02,9.5994761E-03,5.9475303E-03,3.7791419E-03,2.4317987E-03,1.5740349E-03,1.0215811E-03},
                                  {0, 1.6708429E+09,-4.4609238E+08,-2.3408734E+07,-2.9125728E+06,-3.0070969E+05,-3.6891793E+04,-4.7210000E+03,-6.5544958E+02,-9.6757126E+01,-1.5279375E+01,-2.5885923E+00,-4.7877559E-01,-1.0004492E-01,-2.5038252E-02,-8.0549689E-03,-3.4989247E-03,-2.0326169E-03,-1.4759374E-03,-1.2306094E-03,-1.1044876E-03,-1.0269132E-03,-9.7091834E-04},
                                  {0, -5.7003155E+14,1.7859992E+13,1.9584691E+11,9.1657103E+09,2.9465027E+08,1.2607316E+07,5.6750369E+05,2.9000309E+04,1.6226423E+03,1.0077829E+02,6.9927955E+00,5.6028718E-01,5.5072814E-02,7.3003420E-03,1.4327366E-03,4.2855239E-04,1.8419327E-04,1.0439868E-04,7.3972609E-05,6.4804532E-05,6.7844150E-05,8.2393039E-05}};

            for (int i = 1; i < 17; i++)
            {
                Assert.AreEqual(sd[i], sp.Sd[i], 0.00001);
                Assert.AreEqual(lnh[i], sp.lnh[i], 0.00001);
            }
            for (int i = 1; i < 67; i++)
            {
                Assert.AreEqual(S[i], sp.S[i], 0.00001);
                Assert.AreEqual(h[i], sp.h[i], 0.001);
                Assert.AreEqual(phi[i], sp.phi[i], 0.00001);
            }
            for (int i = 0; i < 24; i++)
            {
                Assert.AreEqual(sc[i], sp.Sc[i], 0.00001);
                Assert.AreEqual(hc[i], sp.hc[i], 0.0001);
                Assert.AreEqual(kc[i], sp.Kc[i], 0.0001);
                Assert.AreEqual(phic[i], sp.phic[i], 0.00001);
            }
            for (int i = 0; i < 3; i++)
                for (int j = 1; j < 23; j++)
                {
                    Assert.AreEqual(kco[i, j], sp.Kco[i, j], Math.Abs(sp.Kco[i, j] * (1.0 / 100000.0)));
                    Assert.AreEqual(phico[i, j], sp.phico[i, j], Math.Abs(sp.phico[i, j] * (1.0 / 100000.0)));
                    Assert.AreEqual(sco[i, j], sp.Sco[i, j], Math.Abs(sco[i, j] * (1.0 / 100000.0)));
                }
        }

        [Test]
        public void TestSofh()
        {
            MVG.Params(103, 0.4, 2.0, -2.0, -1E7, 1.0, -10.0, 0.14285714285714285, 2.3333333333333335);
            Assert.AreEqual(0, MVG.Sofh(-1E7));
            Assert.AreEqual(6.83350741435243408E-002, MVG.Sofh(-21544.346900318826), 1E-5);
            Assert.AreEqual(9.12129297498235209E-002, MVG.Sofh(-1E4), 1E-5);
            Assert.AreEqual(0.12076080836067363, MVG.Sofh(-4641.5888336127764), 1E-5);
        }

        [Test]
        public void TestKofh()
        {
            MVG.Params(103, 0.4, 2.0, -2.0, -1E7, 1.0, -10.0, 0.14285714285714285, 2.3333333333333335);
            Assert.AreEqual(0, MVG.Sofh(-1E7));
            Assert.AreEqual(3.43374502028177369E-023, MVG.Kofh(-4641588.8336127782), 1E-5);
            Assert.AreEqual(8.74052752237417620E-010, MVG.Kofh(-1E4), 1E-5);
            Assert.AreEqual(1.09235574984506215E-008, MVG.Kofh(-4641.5888336127764), 1E-5);
        }

        [Test]
        public void TestKofhS()
        {
            MVG.Params(103, 0.4, 2.0, -2.0, -1E7, 1.0, -10.0, 0.14285714285714285, 2.3333333333333335);
            Assert.AreEqual(8.74052752237418757E-010, MVG.KofhS(-10000.0, 9.12129297498235347E-002));
            Assert.AreEqual(2.05800228611534415E-009, MVG.KofhS(-7725.2047680064061, 0.10031815579678077));
            Assert.AreEqual(4.80986339103528703E-009, MVG.KofhS(-5967.8788707628973, 0.11024140753648699));
        }
        [Test]
        public void TestCuco()
        {
            double[] co = new double[] { 0, 8.74052752237418757E-010, 1.70652355927647116E-004, 102.79557553704042, -11014179.913490161 };
            double[] res = (double[])Extensions.TestMethod("Soil", "Cuco", new object[] {new double[] { 0, 3.35430139632049164E-006, 4.89939274080199067E-006, 6.44448408528348971E-006, 9.06228104811576516E-006 },
                                                                                         new double[] { 0, 8.74052752237418757E-010, 1.34250386454775908E-009, 2.05800228611534415E-009, 3.14899124207714114E-009 } });
            for (int i = 1; i < 5; i++)
                Assert.AreEqual(co[i], res[i], 1E-7);

            co = new double[] { 0, 3.35430139632049164E-006, 4.21910871760320619E-004, -2.43106740521981946E-002, 1.6745513940808423 };
            res = (double[])Extensions.TestMethod("Soil", "Cuco", new object[] {new double[] { 0, 9.12129297498235347E-002, 9.56676400855468595E-002, 0.10031815579678077, 0.10517308336649288 },
                                                                                new double[] { 0, 3.35430139632049164E-006, 4.89939274080199067E-006, 6.44448408528348971E-006, 9.06228104811576516E-006 } });
            for (int i = 1; i < 5; i++)
                Assert.AreEqual(co[i], res[i], 1E-7);

            co = new double[] { 0, 6.61826402005915582E-002, 9.42175445640624359E-002, 1.86617174113774507E-002, -2.82809870210848054E-003 };
            res = (double[])Extensions.TestMethod("Soil", "Cuco", new object[] {new double[] { 0, 1.0199380797967188, 1.3090248223018064, 1.6715364927481866, 2.1208697302753805},
                                                                                new double[] { 0, 6.61826402005915582E-002, 9.49109394182188898E-002, 0.13471563346364274, 0.18875488914512453 } });
            for (int i = 1; i < 5; i++)
                Assert.AreEqual(co[i], res[i], 1E-7);
        }

        [Test]
        public void TestFluxTable()
        {
            double[] phif = new double[] {0, 3.35430150E-06, 3.55115539E-04, 7.06876803E-04, 4.60858317E-03, 8.51028971E-03, 5.26290871E-02, 9.67478827E-02, 0.28462365, 0.47249940, 0.74621874, 1.0199381, 1.5704038, 2.1208696, 6.3211632, 10.521457, 14.329704, 18.137953, 20.137953, 22.137953, 26.137953, 30.137953, 44.137955, 58.137955, 94.137955, 130.13795 };
            int sid = 103;
            int nfu = 17;
            int nft = 25;
            double dz = 5.0;
            double[,] ftable = new double[,] {  {0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
                                                {0, 8.74053E-10,-7.00600E-05,-1.40062E-04,-9.12537E-04,-1.67772E-03,-1.01465E-02,-1.85249E-02,-5.31899E-02,-8.62139E-02,-1.33057E-01,-1.78940E-01,-2.68306E-01,-3.53790E-01,-9.42558E-01,-1.53731E+00,-2.08172E+00,-2.63105E+00,-2.94224E+00,-3.26292E+00,-3.93274E+00,-4.64053E+00,-7.26929E+00,-9.93176E+00,-1.69329E+01,-2.41570E+01},
                                                {0, 7.06454E-05,5.80186E-07,-6.92736E-05,-8.41223E-04,-1.60634E-03,-1.00741E-02,-1.84514E-02,-5.31138E-02,-8.61371E-02,-1.32979E-01,-1.78860E-01,-2.68224E-01,-3.53707E-01,-9.42469E-01,-1.53722E+00,-2.08163E+00,-2.63096E+00,-2.94215E+00,-3.26282E+00,-3.93265E+00,-4.64044E+00,-7.26920E+00,-9.93168E+00,-1.69329E+01,-2.41570E+01},
                                                {0, 1.41351E-04,7.14331E-05,1.56778E-06,-7.69880E-04,-1.53492E-03,-1.00016E-02,-1.83780E-02,-5.30376E-02,-8.60603E-02,-1.32900E-01,-1.78781E-01,-2.68143E-01,-3.53624E-01,-9.42380E-01,-1.53713E+00,-2.08153E+00,-2.63087E+00,-2.94205E+00,-3.26273E+00,-3.93256E+00,-4.64035E+00,-7.26912E+00,-9.93160E+00,-1.69328E+01,-2.41569E+01},
                                                {0, 9.29664E-04,8.60272E-04,7.90909E-04,2.39380E-05,-7.40347E-04,-9.19586E-03,-1.75623E-02,-5.21928E-02,-8.52080E-02,-1.32032E-01,-1.77898E-01,-2.67238E-01,-3.52704E-01,-9.41395E-01,-1.53610E+00,-2.08049E+00,-2.62983E+00,-2.94102E+00,-3.26170E+00,-3.93154E+00,-4.63935E+00,-7.26817E+00,-9.93069E+00,-1.69319E+01,-2.41561E+01},
                                                {0, 1.72542E-03,1.65610E-03,1.58681E-03,8.20601E-04,5.86804E-05,-8.38694E-03,-1.67445E-02,-5.13481E-02,-8.43545E-02,-1.31163E-01,-1.77015E-01,-2.66332E-01,-3.51782E-01,-9.40409E-01,-1.53507E+00,-2.07945E+00,-2.62879E+00,-2.93998E+00,-3.26067E+00,-3.93052E+00,-4.63835E+00,-7.26721E+00,-9.92977E+00,-1.69311E+01,-2.41552E+01},
                                                {0, 1.09166E-02,1.08484E-02,1.07802E-02,1.00253E-02,9.27333E-03,8.51288E-04,-7.37447E-03,-4.17380E-02,-7.46276E-02,-1.21269E-01,-1.66972E-01,-2.56043E-01,-3.41320E-01,-9.29231E-01,-1.52344E+00,-2.06764E+00,-2.61701E+00,-2.92825E+00,-3.24900E+00,-3.91901E+00,-4.62705E+00,-7.25646E+00,-9.91947E+00,-1.69215E+01,-2.41457E+01},
                                                {0, 2.02133E-02,2.01461E-02,2.00788E-02,1.93340E-02,1.85911E-02,1.03010E-02,2.08611E-03,-3.20537E-02,-6.48292E-02,-1.11309E-01,-1.56868E-01,-2.45701E-01,-3.30809E-01,-9.18018E-01,-1.51179E+00,-2.05581E+00,-2.60522E+00,-2.91651E+00,-3.23731E+00,-3.90749E+00,-4.61574E+00,-7.24570E+00,-9.90916E+00,-1.69119E+01,-2.41362E+01},
                                                {0, 6.09836E-02,6.09192E-02,6.08547E-02,6.01395E-02,5.94238E-02,5.13764E-02,4.33872E-02,1.02205E-02,-2.23015E-02,-6.81613E-02,-1.13163E-01,-2.01064E-01,-2.85494E-01,-8.69867E-01,-1.46187E+00,-2.00521E+00,-2.55483E+00,-2.86634E+00,-3.18743E+00,-3.85832E+00,-4.56751E+00,-7.19985E+00,-9.86526E+00,-1.68711E+01,-2.40957E+01},
                                                {0, 1.03667E-01,1.03603E-01,1.03539E-01,1.02832E-01,1.02126E-01,9.42007E-02,8.63306E-02,5.34305E-02,2.15248E-02,-2.38235E-02,-6.83593E-02,-1.55463E-01,-2.39281E-01,-8.21070E-01,-1.41149E+00,-1.95427E+00,-2.50414E+00,-2.81591E+00,-3.13731E+00,-3.80898E+00,-4.51915E+00,-7.15392E+00,-9.82134E+00,-1.68304E+01,-2.40553E+01},
                                                {0, 1.67587E-01,1.67525E-01,1.67463E-01,1.66772E-01,1.66082E-01,1.58330E-01,1.50628E-01,1.18371E-01,8.69953E-02,4.20080E-02,-1.67206E-03,-8.77466E-02,-1.70729E-01,-7.49060E-01,-1.33741E+00,-1.87952E+00,-2.42986E+00,-2.74207E+00,-3.06398E+00,-3.73687E+00,-4.44853E+00,-7.08694E+00,-9.75735E+00,-1.67710E+01,-2.39963E+01},
                                                {0, 2.32907E-01,2.32846E-01,2.32785E-01,2.32109E-01,2.31433E-01,2.23837E-01,2.16283E-01,1.84603E-01,1.53708E-01,1.09588E-01,6.61826E-02,-1.89415E-02,-1.01172E-01,-6.76314E-01,-1.26281E+00,-1.80439E+00,-2.35530E+00,-2.66800E+00,-2.99046E+00,-3.66464E+00,-4.37785E+00,-7.01997E+00,-9.69341E+00,-1.67118E+01,-2.39374E+01},
                                                {0, 3.68506E-01,3.68448E-01,3.68389E-01,3.67737E-01,3.67084E-01,3.59742E-01,3.52435E-01,3.21713E-01,2.91633E-01,2.48598E-01,2.06177E-01,1.23229E-01,4.17569E-02,-5.27793E-01,-1.11120E+00,-1.65214E+00,-2.20447E+00,-2.51831E+00,-2.84203E+00,-3.51906E+00,-4.23557E+00,-6.88533E+00,-9.56502E+00,-1.65931E+01,-2.38191E+01},
                                                {0, 5.09766E-01,5.09709E-01,5.09651E-01,5.09015E-01,5.08379E-01,5.01214E-01,4.94081E-01,4.64050E-01,4.34582E-01,3.92483E-01,3.50893E-01,2.68795E-01,1.88755E-01,-3.76298E-01,-9.57476E-01,-1.49835E+00,-2.05247E+00,-2.36767E+00,-2.69283E+00,-3.37304E+00,-4.09309E+00,-6.75074E+00,-9.43687E+00,-1.64748E+01,-2.37010E+01},
                                                {0, 1.69388E+00,1.69382E+00,1.69377E+00,1.69319E+00,1.69261E+00,1.68605E+00,1.67951E+00,1.65185E+00,1.62451E+00,1.58516E+00,1.54612E+00,1.46855E+00,1.39224E+00,8.03401E-01,2.50989E-01,-3.04596E-01,-8.84025E-01,-1.21423E+00,-1.55500E+00,-2.26822E+00,-3.02367E+00,-5.74429E+00,-8.48110E+00,-1.55929E+01,-2.28117E+01},
                                                {0, 2.84560E+00,2.84555E+00,2.84550E+00,2.84495E+00,2.84440E+00,2.83815E+00,2.83192E+00,2.80547E+00,2.77918E+00,2.74113E+00,2.70324E+00,2.62756E+00,2.55256E+00,1.99233E+00,1.39352E+00,8.17247E-01,2.09255E-01,-1.41099E-01,-5.00331E-01,-1.24542E+00,-2.02602E+00,-4.79138E+00,-7.56406E+00,-1.47274E+01,-2.19392E+01},
                                                {0, 3.86184E+00,3.86179E+00,3.86174E+00,3.86119E+00,3.86064E+00,3.85443E+00,3.84823E+00,3.82187E+00,3.79561E+00,3.75747E+00,3.71942E+00,3.64317E+00,3.56728E+00,2.99206E+00,2.37242E+00,1.78322E+00,1.13552E+00,7.62458E-01,3.84017E-01,-3.88996E-01,-1.18352E+00,-3.97369E+00,-6.76611E+00,-1.39570E+01,-2.11627E+01},
                                                {0, 4.85145E+00,4.85140E+00,4.85135E+00,4.85078E+00,4.85022E+00,4.84381E+00,4.83741E+00,4.81019E+00,4.78306E+00,4.74364E+00,4.70428E+00,4.62529E+00,4.54652E+00,3.94558E+00,3.29712E+00,2.66809E+00,2.00000E+00,1.60000E+00,1.20000E+00,4.00000E-01,-4.00000E-01,-3.20000E+00,-6.00000E+00,-1.32000E+01,-2.04000E+01},
                                                {0, 5.33002E+00,5.32997E+00,5.32992E+00,5.32934E+00,5.32877E+00,5.32226E+00,5.31576E+00,5.28811E+00,5.26054E+00,5.22046E+00,5.18041E+00,5.09999E+00,5.01972E+00,4.40633E+00,3.74061E+00,3.09181E+00,2.40000E+00,2.00000E+00,1.60000E+00,8.00000E-01,-1.23328E-17,-2.80000E+00,-5.60000E+00,-1.28000E+01,-2.00000E+01},
                                                {0, 5.79778E+00,5.79773E+00,5.79768E+00,5.79709E+00,5.79651E+00,5.78991E+00,5.78331E+00,5.75524E+00,5.72724E+00,5.68652E+00,5.64582E+00,5.56402E+00,5.48231E+00,4.85675E+00,4.17584E+00,3.51067E+00,2.80000E+00,2.40000E+00,2.00000E+00,1.20000E+00,4.00000E-01,-2.40000E+00,-5.20000E+00,-1.24000E+01,-1.96000E+01},
                                                {0, 6.70087E+00,6.70082E+00,6.70076E+00,6.70016E+00,6.69956E+00,6.69278E+00,6.68599E+00,6.65712E+00,6.62830E+00,6.58636E+00,6.54441E+00,6.46005E+00,6.37566E+00,5.72662E+00,5.02153E+00,4.33380E+00,3.60000E+00,3.20000E+00,2.80000E+00,2.00000E+00,1.20000E+00,-1.60000E+00,-4.40000E+00,-1.16000E+01,-1.88000E+01},
                                                {0, 7.56072E+00,7.56067E+00,7.56061E+00,7.56000E+00,7.55938E+00,7.55242E+00,7.54546E+00,7.51583E+00,7.48624E+00,7.44317E+00,7.40007E+00,7.31336E+00,7.22657E+00,6.55521E+00,5.83417E+00,5.13750E+00,4.40000E+00,4.00000E+00,3.60000E+00,2.80000E+00,2.00000E+00,-8.00000E-01,-3.60000E+00,-1.08000E+01,-1.80000E+01},
                                                {0, 1.04792E+01,1.04792E+01,1.04791E+01,1.04785E+01,1.04778E+01,1.04705E+01,1.04631E+01,1.04319E+01,1.04006E+01,1.03551E+01,1.03096E+01,1.02179E+01,1.01261E+01,9.41407E+00,8.66270E+00,7.94750E+00,7.20000E+00,6.80000E+00,6.40000E+00,5.60000E+00,4.80000E+00,2.00000E+00,-8.00000E-01,-8.00000E+00,-1.52000E+01},
                                                {0, 1.33750E+01,1.33750E+01,1.33749E+01,1.33742E+01,1.33736E+01,1.33659E+01,1.33583E+01,1.33257E+01,1.32931E+01,1.32456E+01,1.31980E+01,1.31023E+01,1.30064E+01,1.22612E+01,1.14853E+01,1.07553E+01,1.00000E+01,9.60000E+00,9.20000E+00,8.40000E+00,7.60000E+00,4.80000E+00,2.00000E+00,-5.20000E+00,-1.24000E+01},
                                                {0, 2.07174E+01,2.07173E+01,2.07173E+01,2.07165E+01,2.07158E+01,2.07076E+01,2.06995E+01,2.06647E+01,2.06300E+01,2.05793E+01,2.05286E+01,2.04264E+01,2.03239E+01,1.95285E+01,1.87162E+01,1.79651E+01,1.72000E+01,1.68000E+01,1.64000E+01,1.56000E+01,1.48000E+01,1.20000E+01,9.20000E+00,2.00000E+00,-5.20000E+00},
                                                {0, 2.79098E+01,2.79098E+01,2.79097E+01,2.79090E+01,2.79082E+01,2.79000E+01,2.78918E+01,2.78568E+01,2.78217E+01,2.77707E+01,2.77196E+01,2.76167E+01,2.75136E+01,2.67183E+01,2.59079E+01,2.51601E+01,2.44000E+01,2.40000E+01,2.36000E+01,2.28000E+01,2.20000E+01,1.92000E+01,1.64000E+01,9.20000E+00,2.00000E+00} };

            MVG.TestParams(103, 9.0, 0.99670220130280185, 9.99999999999998460E-003);
            SoilProps sp = Soil.gensptbl(1.0, new SoilParam(10, 103, 0.4, 2.0, -2.0, -10.0, 1.0 / 3.0, 1.0), true);
            Fluxes.FluxTable(5.0, sp);
            FluxTable ft = Fluxes.ft;

            for (int i = 0; i < 2; i++)
            {
                Assert.AreEqual(sid, ft.fend[i].sid);
                Assert.AreEqual(nfu, ft.fend[i].nfu);
                Assert.AreEqual(nft, ft.fend[i].nft);
                Assert.AreEqual(dz, ft.fend[i].dz, 1E-5);
                for (int j = 1; j < phif.Length; j++)
                    Assert.AreEqual(phif[j], ft.fend[i].phif[j], 1E-5);
            }

            for (int i = 1; i < ftable.GetLength(0); i++)
                for (int j = 1; j < ftable.GetLength(1); j++)
                {
                    Assert.AreEqual(ftable[i, j], ft.ftable[i, j], 1E-4); //not enough sig figs for 1E-5
                }
        }

        [Test]
        public void TestCurv()
        {
            int[] n = new int[] { 23, 8, 23, 8 };
            double[][] x = new double[][] { new double[] { 0, 3.3543015E-06, 9.0622807E-06, 2.2111013E-05, 5.4056705E-05, 1.2864407E-04, 3.0346573E-04, 7.0687680E-04, 1.6327475E-03, 3.7402771E-03, 8.5102897E-03, 1.9243740E-02, 4.3270700E-02, 9.6747883E-02, 2.1487948E-01, 4.7249940E-01, 1.0199381E+00, 2.1208696E+00, 4.1032548E+00, 7.0620103E+00, 1.0521457E+01, 1.3735456E+01, 1.6283688E+01, 1.8137953E+01 },
                                            new double[] { 0, 1.8137953E+01,2.2137953E+01,3.0137953E+01,4.2137953E+01,5.8137953E+01,7.8137953E+01,1.0213795E+02,1.3013795E+02},
                                            new double[] { 0, 3.3543015E-06,9.0622807E-06,2.2111013E-05,5.4056705E-05,1.2864407E-04,3.0346573E-04,7.0687680E-04,1.6327475E-03,3.7402771E-03,8.5102897E-03,1.9243740E-02,4.3270700E-02,9.6747883E-02,2.1487948E-01,4.7249940E-01,1.0199381E+00,2.1208696E+00,4.1032548E+00,7.0620103E+00,1.0521457E+01,1.3735456E+01,1.6283688E+01,1.8137953E+01},
                                            new double[] { 0, 1.8137953E+01,2.2137953E+01,3.0137953E+01,4.2137953E+01,5.8137953E+01,7.8137953E+01,1.0213795E+02,1.3013795E+02}};
            double[][] y = new double[][] { new double[] { 0, 8.7405277E-10, -1.1396308E-06, -3.7459513E-06, -1.0123181E-05, -2.5000949E-05, -5.9830572E-05, -1.4006159E-04, -3.2372751E-04, -7.4022928E-04, -1.6777156E-03, -3.7702400E-03, -8.3991796E-03, -1.8524867E-02, -4.0336047E-02, -8.6213874E-02, -1.7893964E-01, -3.5378972E-01, -6.4726980E-01, -1.0617878E+00, -1.5373107E+00, -1.9864334E+00, -2.3544193E+00, -2.6310543E+00 },
                                            new double[] { 0, -2.6310543E+00,-3.2629155E+00,-4.6405277E+00,-6.8573999E+00,-9.9317606E+00,-1.3849302E+01,-1.8594527E+01,-2.4157049E+01},
                                            new double[] { 0, 8.7405277E-10,-1.1396308E-06,-3.7459513E-06,-1.0123181E-05,-2.5000949E-05,-5.9830572E-05,-1.4006159E-04,-3.2372751E-04,-7.4022928E-04,-1.6777156E-03,-3.7702400E-03,-8.3991796E-03,-1.8524867E-02,-4.0336047E-02,-8.6213874E-02,-1.7893964E-01,-3.5378972E-01,-6.4726980E-01,-1.0617878E+00,-1.5373107E+00,-1.9864334E+00,-2.3544193E+00,-2.6310543E+00},
                                            new double[] { 0, -2.6310543E+00,-3.2629155E+00,-4.6405277E+00,-6.8573999E+00,-9.9317606E+00,-1.3849302E+01,-1.8594527E+01,-2.4157049E+01}};
            double[][] c = new double[][] { new double[] { 0, 2.4892539E-04, 2.7270127E-04, 3.5260584E-04, 4.9843037E-04, 7.0969318E-04, 1.0252491E-03, 1.4834525E-03, 2.1532300E-03, 3.1275355E-03, 4.5415981E-03, 6.5765435E-03, 9.4508242E-03, 1.3329798E-02, 1.8000836E-02, 2.2055247E-02, 2.2035189E-02, 1.4786369E-02, 3.9846750E-03, -2.4683008E-03, -3.3295582E-03, -2.1743061E-03 },
                                            new double[] { 0, -1.1500963E-02,-1.2802653E-02,-7.3534434E-03,-3.3268152E-03,-1.4477492E-03,-6.5551586E-04},
                                            new double[] { 0, 2.4892539E-04,2.7270127E-04,3.5260584E-04,4.9843037E-04,7.0969318E-04,1.0252491E-03,1.4834525E-03,2.1532300E-03,3.1275355E-03,4.5415981E-03,6.5765435E-03,9.4508242E-03,1.3329798E-02,1.8000836E-02,2.2055247E-02,2.2035189E-02,1.4786369E-02,3.9846750E-03,-2.4683008E-03,-3.3295582E-03,-2.1743061E-03},
                                            new double[] { 0, -1.1500963E-02,-1.2802653E-02,-7.3534434E-03,-3.3268152E-03,-1.4477492E-03,-6.5551586E-04}};
            for (int i = 0; i < 4; i++)
            {
                double[] res = (double[])Extensions.TestMethod("Fluxes", "curv", new object[] { n[i], x[i], y[i] });
                for (int j = 1; j < c[i].Length; j++)
                {
                    Assert.AreEqual(c[i][j], res[j], 1E-7);
                }
            }
        }

        [Test]
        public void TestIndices()
        {
            // Note that not all of isel is tested. Looking at the results from FORTRAN, it appears that only values up to nsel are used.
            // After this, the rest are orders of magnitude higher (or 0) and in c# are all 0 so it looks like it just hasn't been zeroed.
            int[] n = new int[] { 21, 6, 21, 6 };
            int[] iend = new int[] { 15, 7, 15, 7 };
            double[][] c = new double[][] { new double[] { 0, -2.1743061E-03,-3.3295582E-03,-2.4683008E-03,3.9846750E-03,1.4786369E-02,2.2035189E-02,2.2055247E-02,1.8000836E-02,1.3329798E-02,9.4508242E-03,6.5765435E-03,4.5415981E-03,3.1275355E-03,2.1532300E-03,1.4834525E-03,1.0252491E-03,7.0969318E-04,4.9843037E-04,3.5260584E-04,2.7270127E-04,2.4892539E-04},
                                            new double[] { 0, -1.1500963E-02,-1.2802653E-02,-7.3534434E-03,-3.3268152E-03,-1.4477492E-03,-6.5551586E-04},
                                            new double[] { 0, -2.1743061E-03,-3.3295582E-03,-2.4683008E-03,3.9846750E-03,1.4786369E-02,2.2035189E-02,2.2055247E-02,1.8000836E-02,1.3329798E-02,9.4508242E-03,6.5765435E-03,4.5415981E-03,3.1275355E-03,2.1532300E-03,1.4834525E-03,1.0252491E-03,7.0969318E-04,4.9843037E-04,3.5260584E-04,2.7270127E-04,2.4892539E-04},
                                            new double[] { 0, -1.1500963E-02,-1.2802653E-02,-7.3534434E-03,-3.3268152E-03,-1.4477492E-03,-6.5551586E-04}};
            int[] nsel = new int[] { 9, 5, 9, 5 };
            int[][] isel = new int[][] {new int[] { 0, 1,4,7,8,9,11,14,17,23,14090454,14221528,14352602,14483676,14614750,14745824,14876898,15007972,15139046,15270120,15401194,15532268,15663342,15794416},
                                        new int[] { 0, 1,2,3,5,8,887401765,0,2692940},
                                        new int[] { 0, 1,4,7,8,9,11,14,17,23,24,25,27,30,14614750,14745824,14876898,15007972,15139046,15270120,15401194,15532268,15663342,15794416},
                                        new int[] { 0, 1,2,3,5,8,887401765,0,2692940}};
            for (int i = 0; i < 4; i++)
            {
                int[] temp = new int[isel[i].Length]; //using a temp var here since isel is passed by ref.
                Array.Copy(isel[i], temp, isel[i].Length);
                KeyValuePair<int, int[]> res = Fluxes.TestIndices(n[i], c[i], iend[i], 1.2);
                for (int j = 0; j < nsel[i]; j++)
                {
                    Assert.AreEqual(nsel[i], res.Key);
                    Assert.AreEqual(isel[i][j], res.Value[j]);
                }
            }
        }

        [Test]
        public void TestSsflux()
        {
            double[] hpK = new double[] { 0, 1.94234831366152960E-009, 6.76009221517655841E-009, 2.39067361626199684E-008, 8.26003888725066589E-008, 2.83763063221598471E-007,
                9.64115151514902454E-007, 3.25264392642664953E-006, 1.08942026791920240E-005, 3.62729534476639206E-005, 1.20103943650300206E-004, 3.95600175995733144E-004,
                1.29550857845400075E-003, 4.20904899246485765E-003, 1.34867245771773323E-002, 4.20080495949624391E-002, 0.12322918989513706, 0.32127026245395052, 0.69042467898514936,
                1.1659401715497246, 1.5782001871550688, 1.8347236571922523, 1.9630393164523054 };
            MVG.TestParams(103, 9.0, 0.99670220130280185, 0.001);
            Fluxes.SetupSsflux(Soil.gensptbl(1.0, new SoilParam(10, 103, 0.4, 2.0, -2.0, -10.0, 1.0 / 3.0, 1.0), true), 23, hpK);
            int[] ia = new int[] { 1, 1, 7, 7 };
            int[] ib = new int[] { 2, 14, 23, 7 };
            double[] qin = new double[] { -1.14159583972650572E-006, -4.08926049774738995E-002, -2.6310543444356651, 0.0 };
            double[] ssflux = new double[] { -1.13963081216825338E-006, -4.03360467551977520E-002, -2.630866817212414, 1.56777923621120863E-006 };

            for (int i = 0; i < ia.Length; i++)
            {
                double res = (double)Extensions.TestMethod("Fluxes", "ssflux", new object[] { ia[i], ib[i], 5.0, qin[i], 0.001 });
                Assert.AreEqual(ssflux[i], res, Math.Abs(ssflux[i] * 1E-6));
            }
        }

        [Test]
        public void TestQuadco()
        {
            double[][] x = new double[][] { new double[] { 0, 3.35430149789317511E-006,   7.06876802723854780E-004,    8.51028971374034882E-003 },
                                            new double[] { 0, 8.51028971374034882E-003,   9.67478826642036438E-002,    0.47249940037727356 },
                                            new double[] { 0, 30.137952804565430,        58.137952804565430,         130.13795280456543 },
                                            new double[] { 0, 18.137952804565430,        22.137952804565430,          30.137952804565430 } };

            double[][] y = new double[][] { new double[] { 0,  8.74052774602063209E-010, -1.40061593563879389E-004,  -1.67771560183558287E-003 },
                                            new double[] { 0, -1.67771560183558287E-003, -1.85248667681024125E-002,  -8.62138741173868323E-002 },
                                            new double[] { 0, -4.3778504016845483,       -9.6934130715473810,       -23.937424286017979 },
                                            new double[] { 0, -0.40000000000000002,       0.40000000000000002,        2.0000000000000000 } };

            double[][] co = new double[][] { new double[] { 0,  8.74052774602063209E-010, -0.19925598595823826,  0.23962717107738787 },
                                             new double[] { 0, -1.67771560183558287E-003, -0.19298067361716689,  2.32470994704214833E-002},
                                             new double[] { 0, -4.3778504016845483,       -0.18760377367713743, -7.99196516619687767E-005},
                                             new double[] { 0, -0.40000000000000002,       0.20000000000000001, -3.08395284618099022E-018 } };

            for (int i = 1; i < x.Length; i++)
            {
                double[] res = (double[])Extensions.TestMethod("Fluxes", "quadco", new object[] { x[i], y[i] });
                for(int j=0; j<co[i].Length;j++)
                Assert.AreEqual(co[i][j], res[j], 1E-7);
            }
        }

        [Test]
        public void TestQuadinterp()
        {
            double[][] x = new double[][] { new double[]
            {0, 3.35430149789317511E-006, 7.06876802723854780E-004, 8.51028971374034882E-003, 9.67478826642036438E-002, 0.47249940037727356,
                1.0199381113052368,       2.1208696365356445,      10.521456718444824,       18.137952804565430,       22.137952804565430,
                30.137952804565430,      58.137952804565430 } };

            double[][] y = new double[][] {new double[]
            {0, 8.74052774602063209E-010,-1.40061593563879389E-004,-1.67771560183558287E-003,-1.85248667681024125E-002,-8.62138741173868323E-002,
               -0.17893963536218291,     -0.35378972383147539,     -1.5373106880697993,      -2.6310543444356651,      -3.2629155204057194,
               -4.6405277301360606,      -9.9317606159680025 } };

            int[] n = new int[] { 13 };

            double[][] u = new double[][] {new double[]
            {0, 3.55115552110873978E-004, 4.60858325823210180E-003, 5.26290861889719963E-002, 0.28462364152073860,      0.74621875584125519,
                1.5704038739204407,       6.3211631774902344,      14.329704761505127,       20.137952804565430,       26.137952804565430,
               44.137952804565430,       94.137952804565430 } };

            double[][] v = new double[][] { new double[]
            {0,-7.00600102577851169E-005,-9.12536517191837133E-004,-1.01465409248867374E-002,-5.31899303046873273E-002,-0.13305677471189858,
               -0.26830605228069876,     -0.94255810767260506,     -2.0817229018673689,      -2.9422395216794328,      -3.9327399823058511,
               -7.2692865175117367,     -16.932937787368452} };

            for (int i = 1; i < x.Length; i++)
            {
                double[] res = (double[])Extensions.TestMethod("Fluxes", "quadinterp", new object[] { x[i], y[i], n[i], u[i] });
                for (int j = 0; j < v[i].Length; j++)
                    Assert.AreEqual(v[i][j], res[j], 1E-7);
            }
        }

        [Test]
        public void TestFd()
        {
            double[] phia = new double[] { 3.35430149789317511E-006 };
            double[] f = new double[] { 4.20606605100459774E-010 };
            double[] d = new double[] { -0.25981243845145552 };
            double[] q = new double[] { 8.74052774602063209E-010 };
            double[] phi1max = new double[] { 18.137952804565430 };
            int[] nco1 = new int[] { 4 };
            int[] j = new int[] { 1 };
            int[][] nft = new int[][] { new int[] { 0, 13, 14 } };
            double[][] phie = new double[][] { new double[] { 0, 18.137952804565430, 7.4998521804809570 } };
            double[][] Ks = new double[][] { new double[] { 0,  2.0, 0.2} };
            double[][] he = new double[][] { new double[] { 0, -2, -2 } };
            double[][] phico1 = new double[][] { new double[] { 0, 3.35430149789317511E-006, 9.67478826642036438E-002, 2.1208696365356445, 22.137952804565430, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, } };
            double[][] phico2 = new double[][] { new double[] { 0, 1.74016395249054767E-006, 0.20151381194591522, 4.2075948715209961, 9.8998517990112305, 25.499853134155273, 11.499852180480957, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, } };
            double[][,] phif = new double[][,] {new double[,] { {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                                {0,3.35430149789317511E-006,7.06876802723854780E-004,8.51028971374034882E-003,9.67478826642036438E-002,0.47249940037727356,1.0199381113052368,2.1208696365356445,10.521456718444824,18.137952804565430,22.137952804565430,30.137952804565430,58.137954711914063,130.13795471191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
                                                                {0,1.74016395249054767E-006,1.60763040184974670E-003,3.24998162686824799E-002,0.20151381194591522, 0.46446955204010010, 0.98474365472793579,4.2075948715209961,6.6318430900573730,7.4998521804809570,9.8998517990112305,11.499852180480957,15.899852752685547,25.499853134155273,29.499853134155273,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}} };
            double[][,] coq = new double[][,] {new double[,] { {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
                                                               {0,1.74016395249054767E-006,2.66573533735936508E-006,3.59130694960185792E-006,5.48831167179741897E-006,7.86756027082446963E-006,1.19269670904031955E-005,1.75044624484144151E-005,2.62680496234679595E-005,3.87278887501452118E-005,5.75087287870701402E-005,8.44762034830637276E-005,1.24166908790357411E-004,1.81131501449272037E-004,2.63661728240549564E-004,3.81538586225360632E-004,5.50310011021792889E-004,7.89784302469342947E-004,1.12931232433766127E-003,1.60763040184974670E-003,2.27994425222277641E-003,3.22016933932900429E-003,4.53118467703461647E-003,6.35123625397682190E-003,8.86962097138166428E-003,1.23401014134287834E-002,1.71055328100919724E-002,2.36225090920925140E-002,3.24998162686824799E-002,4.45395633578300476E-002,6.07944391667842865E-002,8.26289057731628418E-002,0.11179514974355698,0.15050686895847321,0.20151381194591522,0.26814797520637512,0.35432744026184082,0.46446955204010010,0.60328245162963867,0.77538371086120605,0.98474365472793579,1.2339785099029541,1.5236179828643799,1.8515186309814453,2.2126452922821045,2.5993473529815674,3.0021374225616455,3.4107835292816162,3.8154470920562744,4.2075948715209961,4.5805525779724121,4.9296689033508301,5.2521939277648926,5.5469717979431152,5.8140792846679688,6.0544629096984863,6.2696361541748047,6.4614353179931641,6.6318430900573730,6.7828636169433594,6.9164438247680664,7.0344209671020508,7.1384987831115723,7.2302341461181641,7.3110370635986328,7.3821740150451660,7.4447765350341797,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,0.59903971592475691,0.55241647004672201,0.69014786585383359,0.76001713615413602,0.84477454010441277,0.96801861952776336,1.0449759210451746,1.1932135056612247,1.2816240394605014,1.4427296673303560,1.5495515434219200,1.7187895250027554,1.8451161389476691,2.0207418813911047,2.1648936762746800,2.3460020718569146,2.5049908729675083,2.6905061299510438,2.8606599099983967,3.0488644744386826,3.2260065478587796,3.4143001436008689,3.5936739621736979,3.7783133498419676,3.9542719300321232,4.1299723564596320,4.2953537333450953,4.4545834041040786,4.5997160199733349,4.7315197139504344,4.8427479293508968,4.9311481409038080,4.9890793478821598,5.0115644409818154,4.9901893804932920,4.9182778244876202,4.7880014345112327,4.5942240608766776,4.3340517704844226,4.0099829877400763,3.6302602571667255,3.2099543278080631,2.7693337916428642,2.3313499088889729,1.9176969153320023,1.5454752601113679,1.2250270440049538,0.95975202724622166,0.74737903121510307,0.58196133437779574,0.45587143033033128,0.36129063203805589,0.29114207162947475,0.23948468950959337,0.20159705303456751,0.17385430491834730,0.15354229541029954,0.13865811044327375,0.12774058118558115,0.11972058108946210,0.11382292938726100,0.10948131453329089,0.10628386308464180,0.10392650754975097,0.10218869082934447,0.10046552569959327,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,0.10467559869575349,30175.395261471989,13182.504915027052,12896.908425624057,11155.370907445409,7164.4028239108948,7460.8673588720148,4497.9730291690330,4648.1696693866261,2905.2258356248503,2822.8600141018164,1860.9937110354972,1695.8379355952325,1170.2077696246454,1011.5052821091642,721.19323545172256,598.64391419512538,435.72049903005978,350.64380470534360,257.93654827875025,202.45036732194009,149.22390481330200,114.48439112247901,83.821867047145318,62.697083631964937,45.061117449013764,32.513648491367910,22.436460063954826,15.149415801477842,9.4747692505680945,5.3671977174674916,2.2764540722005857,9.31286893186465958E-002,-1.4488141965388268,-2.4420985928175800,-3.0216605922314979,-3.2574216862221634,-3.2309269083884669,-3.0036731421210181,-2.6424727786916611,-2.2076590694270242,-1.7560457922360766,-1.3326468319176148,-0.96795276196418190,-0.67581885197349800,-0.45626091220110820,-0.29998925568358931,-0.19366320030240025,-0.12383099057330839,-7.91159911237547808E-002,-5.09338137205224972E-002,-3.32859979028440195E-002,-2.22157109179585387E-002,-1.52054383436709666E-002,-1.06966672554839101E-002,-7.73617791203387323E-003,-5.74456370388809999E-003,-4.36813218836487431E-003,-3.39147918376095110E-003,-2.67903358598383431E-003,-2.14638912922668736E-003,-1.73873569021206495E-003,-1.42134202444538357E-003,-1.16946377973924727E-003,-9.67727726513348003E-004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}};
            double[][,] co1 = new double[][,] {new double[,] { {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,8.74052774602063209E-010,-1.85248665511608124E-002,-0.35378971695899963,-3.2629156112670898,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,-0.19926685892421606,-0.18542304604481000,-0.14663216925204117,-0.16746166099638976,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,0.25637377452443127,1.50266280148780972E-002,1.13181057659459175E-003,-6.20619050990607016E-004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,-1.8182831589886863,-2.59390410568598314E-003,-5.32977497275661434E-005,3.51717437867255431E-006,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}} };
            double[][,] phii = new double[][,] {new double[,] {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,3.35430149789317511E-006,4.89939293402130716E-006,6.44448391540208831E-006,9.06228069652570412E-006,1.20421227620681748E-005,1.65759920491836965E-005,2.21110130951274186E-005,3.00476767733925954E-005,4.01083780161570758E-005,5.40567052667029202E-005,7.20935713616199791E-005,9.66126899584196508E-005,1.28644067444838583E-004,1.71671505086123943E-004,2.28157266974449158E-004,3.03465727483853698E-004,4.02526668040081859E-004,5.33940212335437536E-004,7.06876802723854780E-004,9.35491058044135571E-004,1.23622501268982887E-003,1.63274747319519520E-003,2.15394236147403717E-003,2.83974199555814266E-003,3.74027714133262634E-003,4.92322444915771484E-003,6.47492473945021629E-003,8.51028971374034882E-003,1.11772427335381508E-002,1.46709289401769638E-002,1.92437395453453064E-002,2.52267308533191681E-002,3.30489315092563629E-002,4.32706996798515320E-002,5.66182844340801239E-002,7.40365386009216309E-002,9.67478826642036438E-002,0.12633527815341949,0.16483819484710693,0.21487948298454285,0.27981141209602356,0.36389574408531189,0.47249940037727356,0.61230736970901489,0.79151123762130737,1.0199381113052368,1.3090248107910156,1.6715364456176758,2.1208696365356445,2.6698195934295654,3.3287408351898193,4.1032547950744629,4.9919142723083496,5.9845466613769531,7.0620102882385254,8.1978015899658203,9.3612527847290039,10.521456718444824,11.650793075561523,12.727273941040039,13.735456466674805,14.666174888610840,15.515541076660156,16.283687591552734,16.973535537719727,17.589748382568359,18.137952804565430,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
                                                               {0,1.74016395249054767E-006,2.66573533735936508E-006,3.59130694960185792E-006,5.48831167179741897E-006,7.86756027082446963E-006,1.19269670904031955E-005,1.75044624484144151E-005,2.62680496234679595E-005,3.87278887501452118E-005,5.75087287870701402E-005,8.44762034830637276E-005,1.24166908790357411E-004,1.81131501449272037E-004,2.63661728240549564E-004,3.81538586225360632E-004,5.50310011021792889E-004,7.89784302469342947E-004,1.12931232433766127E-003,1.60763040184974670E-003,2.27994425222277641E-003,3.22016933932900429E-003,4.53118467703461647E-003,6.35123625397682190E-003,8.86962097138166428E-003,1.23401014134287834E-002,1.71055328100919724E-002,2.36225090920925140E-002,3.24998162686824799E-002,4.45395633578300476E-002,6.07944391667842865E-002,8.26289057731628418E-002,0.11179514974355698,0.15050686895847321,0.20151381194591522,0.26814797520637512,0.35432744026184082,0.46446955204010010,0.60328245162963867,0.77538371086120605,0.98474365472793579,1.2339785099029541,1.5236179828643799,1.8515186309814453,2.2126452922821045,2.5993473529815674,3.0021374225616455,3.4107835292816162,3.8154470920562744,4.2075948715209961,4.5805525779724121,4.9296689033508301,5.2521939277648926,5.5469717979431152,5.8140792846679688,6.0544629096984863,6.2696361541748047,6.4614353179931641,6.6318430900573730,6.7828636169433594,6.9164438247680664,7.0344209671020508,7.1384987831115723,7.2302341461181641,7.3110370635986328,7.3821740150451660,7.4447765350341797,7.4998521804809570,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}};
            double[][,,] qf = new double[][,,] { new double[,,] { 
                {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},

                {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,8.74052774602063209E-010,-1.40061587444506586E-004,-1.67771556880325079E-003,-1.85248665511608124E-002,-8.62138718366622925E-002,-0.17893964052200317,-0.35378971695899963,-1.5373107194900513,-2.6310544013977051,-3.2629156112670898,-4.6405277252197266,-9.9317607879638672,-24.157049179077148,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.41350523335859179E-004,1.56777923621120863E-006,-1.53491913806647062E-003,-1.83780100196599960E-002,-8.60603228211402893E-002,-0.17878057062625885,-0.35362395644187927,-1.5371255874633789,-2.6308667659759521,-3.2627296447753906,-4.6403484344482422,-9.9315967559814453,-24.156896591186523,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.72542151995003223E-003,1.58680928871035576E-003,5.86804490012582392E-005,-1.67444869875907898E-002,-8.43545123934745789E-002,-0.17701528966426849,-0.35178190469741821,-1.5350723266601563,-2.6287851333618164,-3.2606663703918457,-4.6383500099182129,-9.9297733306884766,-24.155216217041016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,2.02133487910032272E-002,2.00788434594869614E-002,1.85910593718290329E-002,2.08611274138092995E-003,-6.48291632533073425E-002,-0.15686784684658051,-0.33080944418907166,-1.5117871761322021,-2.6052196025848389,-3.2373147010803223,-4.6157422065734863,-9.9091625213623047,-24.136192321777344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.10366687923669815,0.10353925824165344,0.10212565958499908,8.63306075334548950E-002,2.15248186141252518E-002,-6.83593153953552246E-002,-0.23928050696849823,-1.4114917516708374,-2.5041379928588867,-3.1373109817504883,-4.5191507339477539,-9.8213434219360352,-24.055263519287109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.23290684819221497,0.23278495669364929,0.23143337666988373,0.21628333628177643,0.15370817482471466,6.61826431751251221E-002,-0.10117236524820328,-1.2628132104873657,-2.3552966117858887,-2.9904553890228271,-4.3778505325317383,-9.6934127807617188,-23.937423706054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.50976622104644775,0.50965142250061035,0.50837910175323486,0.49408075213432312,0.43458214402198792,0.35089328885078430,0.18875488638877869,-0.95747566223144531,-2.0524716377258301,-2.6928341388702393,-4.0930891036987305,-9.4368715286254883,-23.701007843017578,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,2.8456039428710938,2.8455035686492920,2.8443984985351563,2.8319180011749268,2.7791841030120850,2.7032423019409180,2.5525624752044678,1.3935197591781616,0.20925517380237579,-0.50033056735992432,-2.0260214805603027,-7.5640606880187988,-21.939191818237305,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,4.8514547348022461,4.8513517379760742,4.8502182960510254,4.8374066352844238,4.7830553054809570,4.7042784690856934,4.5465183258056641,3.2971165180206299,2.0000000000000000,1.2000000476837158,-0.40000000596046448,-6.0000000000000000,-20.399999618530273,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,5.7977838516235352,5.7976779937744141,5.7965097427368164,5.7833080291748047,5.7272381782531738,5.6458153724670410,5.4823117256164551,4.1758446693420410,2.7999999523162842,2.0000000000000000,0.40000000596046448,-5.1999998092651367,-19.600000381469727,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,7.5607233047485352,7.5606122016906738,7.5593805313110352,7.5454554557800293,7.4862418174743652,7.4000716209411621,7.2265682220458984,5.8341732025146484,4.4000000953674316,3.5999999046325684,2.0000000000000000,-3.5999999046325684,-18.000000000000000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,13.375046730041504,13.374924659729004,13.373570442199707,13.358259201049805,13.293070793151855,13.198042869567871,13.006375312805176,11.485300064086914,10.000000000000000,9.1999998092651367,7.5999999046325684,2.0000000000000000,-12.399999618530273,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,27.909835815429688,27.909704208374023,27.908239364624023,27.891796112060547,27.821720123291016,27.719554901123047,27.513643264770508,25.907875061035156,24.399999618530273,23.600000381469727,22.000000000000000,16.399999618530273,2.0000000000000000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} },

                {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,4.53446169501603435E-010,-1.58681214088574052E-004,-3.14151938073337078E-003,-1.88519470393657684E-002,-4.24141325056552887E-002,-8.74761641025543213E-002,-0.35497415065765381,-0.56069540977478027,-0.63702976703643799,-0.85621398687362671,-1.0068751573562622,-1.4307284355163574,-2.3749539852142334,-2.7714638710021973,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.62518801516853273E-004,4.46576677859411575E-006,-2.97529669478535652E-003,-1.86805855482816696E-002,-4.22389283776283264E-002,-8.72965455055236816E-002,-0.35478585958480835,-0.56050711870193481,-0.63684213161468506,-0.85602921247482300,-1.0066922903060913,-1.4305502176284790,-2.3747825622558594,-2.7712934017181396,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,3.36180720478296280E-003,3.20683326572179794E-003,2.60337052168324590E-004,-1.53633914887905121E-002,-3.88538166880607605E-002,-8.38308185338973999E-002,-0.35116061568260193,-0.55688351392745972,-0.63323158025741577,-0.85247337818145752,-1.0031754970550537,-1.4271221160888672,-2.3714671134948730,-2.7680060863494873,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,2.15406436473131180E-002,2.13908199220895767E-002,1.85262039303779602E-002,3.18985129706561565E-003,-2.00143009424209595E-002,-6.46271780133247375E-002,-0.33121970295906067,-0.53699135780334473,-0.61342078447341919,-0.83298516273498535,-0.98390996456146240,-1.4083569049835205,-2.3533270359039307,-2.7500216960906982,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,5.08636459708213806E-002,5.07176704704761505E-002,4.79210689663887024E-002,3.28718163073062897E-002,9.98142547905445099E-003,-3.41985374689102173E-002,-0.29994648694992065,-0.50589674711227417,-0.58248180150985718,-0.80260694026947021,-0.95390331745147705,-1.3791644573211670,-2.3251249790191650,-2.7220628261566162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.11082669347524643,0.11068499088287354,0.10796765983104706,9.32763367891311646E-002,7.08184540271759033E-002,2.72187571972608566E-002,-0.23756569623947144,-0.44414329528808594,-0.52111178636550903,-0.74250775575637817,-0.89460539817810059,-1.3215512037277222,-2.2694766521453857,-2.6668868064880371,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.49604192376136780,0.49590730667114258,0.49331888556480408,0.47921666502952576,0.45741119980812073,0.41452318429946899,0.14560256898403168,-6.91681280732154846E-002,-0.14968092739582062,-0.38103231787681580,-0.53839653730392456,-0.97488999366760254,-1.9323056936264038,-2.3318138122558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.77720963954925537,0.77707374095916748,0.77446085214614868,0.76019972562789917,0.73807942867279053,0.69438743591308594,0.41736394166946411,0.19452323019504547,0.11095038056373596,-0.12739539146423340,-0.28719905018806458,-0.72700947523117065,-1.6869029998779297,-2.0868852138519287,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.87414515018463135,0.87400835752487183,0.87137752771377563,0.85701149702072144,0.83471357822418213,0.79062408208847046,0.51034778356552124,0.28461080789566040,0.20000000298023224,-3.99999991059303284E-002,-0.20000000298023224,-0.63999998569488525,-1.6000000238418579,-2.0000000000000000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.1326525211334229,1.1325126886367798,1.1298242807388306,1.1151317358016968,1.0922936201095581,1.0470491647720337,0.75827783346176147,0.52621644735336304,0.43999999761581421,0.20000000298023224,3.99999991059303284E-002,-0.40000000596046448,-1.3600000143051147,-1.7599999904632568,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.3004852533340454,1.3003436326980591,1.2976204156875610,1.2827322483062744,1.2595771551132202,1.2136734724044800,0.92063903808593750,0.68640714883804321,0.60000002384185791,0.36000001430511475,0.20000000298023224,-0.24000000953674316,-1.2000000476837158,-1.6000000238418579,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.7538198232650757,1.7536743879318237,1.7508777379989624,1.7355806827545166,1.7117704153060913,1.6645387411117554,1.3638201951980591,1.1265938282012939,1.0399999618530273,0.80000001192092896,0.63999998569488525,0.20000000298023224,-0.75999999046325684,-1.1599999666213989,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,2.7270650863647461,2.7269148826599121,2.7240276336669922,2.7082290649414063,2.6836309432983398,2.6348361968994141,2.3262300491333008,2.0866990089416504,2.0000000000000000,1.7599999904632568,1.6000000238418579,1.1599999666213989,0.20000000298023224,-0.20000000298023224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,3.1300826072692871,3.1299283504486084,3.1270205974578857,3.1110944747924805,3.0862972736358643,3.0371146202087402,2.7266988754272461,2.4867167472839355,2.4000000953674316,2.1600000858306885,2.0000000000000000,1.5600000619888306,0.60000002384185791,0.20000000298023224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} }
            }
            };
            double[][,,] co2 = new double[][,,] { new double[,,] {
                {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},

                {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,4.53446169501603435E-010,-1.58681214088574052E-004,-3.14151938073337078E-003,-1.88519470393657684E-002,-4.24141325056552887E-002,-8.74761641025543213E-002,-0.35497415065765381,-0.56069540977478027,-0.63702976703643799,-0.85621398687362671,-1.0068751573562622,-1.4307284355163574,-2.3749539852142334,-2.7714638710021973,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,2.15406436473131180E-002,2.13908199220895767E-002,1.85262039303779602E-002,3.18985129706561565E-003,-2.00143009424209595E-002,-6.46271780133247375E-002,-0.33121970295906067,-0.53699135780334473,-0.61342078447341919,-0.83298516273498535,-0.98390996456146240,-1.4083569049835205,-2.3533270359039307,-2.7500216960906982,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.49604192376136780,0.49590730667114258,0.49331888556480408,0.47921666502952576,0.45741119980812073,0.41452318429946899,0.14560256898403168,-6.91681280732154846E-002,-0.14968092739582062,-0.38103231787681580,-0.53839653730392456,-0.97488999366760254,-1.9323056936264038,-2.3318138122558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.1326525211334229,1.1325126886367798,1.1298242807388306,1.1151317358016968,1.0922936201095581,1.0470491647720337,0.75827783346176147,0.52621644735336304,0.43999999761581421,0.20000000298023224,3.99999991059303284E-002,-0.40000000596046448,-1.3600000143051147,-1.7599999904632568,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,2.7270650863647461,2.7269148826599121,2.7240276336669922,2.7082290649414063,2.6836309432983398,2.6348361968994141,2.3262300491333008,2.0866990089416504,2.0000000000000000,1.7599999904632568,1.6000000238418579,1.1599999666213989,0.20000000298023224,-0.20000000298023224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.3004852533340454,1.3003436326980591,1.2976204156875610,1.2827322483062744,1.2595771551132202,1.2136734724044800,0.92063903808593750,0.68640714883804321,0.60000002384185791,0.36000001430511475,0.20000000298023224,-0.24000000953674316,-1.2000000476837158,-1.6000000238418579,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} },

                {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.10107106076226227,0.10147916917175460,0.10344177824748858,0.10667265785550149,0.10907599285362719,0.11183232316176039,0.11724528684470606,0.11724802663619656,0.11684049031274941,0.11505813755308326,0.11387471231319958,0.11097814748882194,0.10671327864302999,0.10613758623884303,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.11007074445884918,0.11008787383784810,0.11038764645331314,0.11163462267235842,0.11296445245716703,0.11481164573528997,0.11852628444029883,0.11804005503428330,0.11750149172851300,0.11548454678596810,0.11412116177360257,0.11108548359784179,0.10733468178462797,0.10640655868055686,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.11928480840702824,0.11928476103884253,0.11928553500941920,0.11927774884121527,0.11922599944997023,0.11903116951845351,0.11624861637190824,0.11322978788464204,0.11211626381706843,0.10891046139298075,0.10709462861707665,0.10448366336528933,0.10246891524884535,0.10207862304696612,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.10551143181014200,0.10551023796594196,0.10548693037262720,0.10535562349336534,0.10514228142110153,0.10469568460586885,0.10173292248919331,0.10014612024936209,0.10000000099291652,9.99999823708095786E-002,9.99999776670582319E-002,9.99999681513184385E-002,9.99999385859413892E-002,9.99999384494838633E-002,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,0.10379560143363391,0.10379439758791147,0.10377474133136733,0.10366420001611119,0.10348608136085069,0.10312317218668854,0.10095299985785941,0.10005835266388695,9.99999637687190024E-002,9.99999899154737776E-002,9.99999721059547098E-002,9.99999964521624540E-002,0.10000000508592594,0.10000000666421768,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} },

                {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,8.15860887431143350E-002,7.11467174930943830E-002,4.14831114329076711E-002,2.21374188083904959E-002,1.55740154160800680E-002,1.09455534030579848E-002,3.10609666147722285E-003,1.39638128763635823E-003,9.32822550287337867E-004,1.42164603959707252E-003,-1.26950630936628703E-003,-3.28296080626762268E-004,2.07493524017952624E-002,9.35884336348219263E-003,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,5.72352975368536909E-003,5.71360920318805029E-003,5.55030000610438109E-003,4.93526120100614210E-003,4.39640521552092656E-003,3.60375204415312430E-003,1.63270989557606988E-003,8.78080367931271220E-004,6.69670090069770249E-004,2.15464354603697489E-004,1.75142537349646581E-005,-2.29871606390306791E-004,-3.04564331514714233E-004,-2.95083964310070726E-004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,-1.40301585773777086E-003,-1.40324840387485539E-003,-1.40866622971906261E-003,-1.43766796637331438E-003,-1.47689797627799683E-003,-1.54663670781628052E-003,-1.85706080275864363E-003,-2.07738269876591060E-003,-2.19878794661757145E-003,-2.18819480050238494E-003,-1.78281904445463739E-003,-1.14991091654586099E-003,-6.40092997573972412E-004,-5.39783525748434539E-004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,-4.04783173996613047E-004,-4.04733941820576391E-004,-4.03730525042815796E-004,-3.97875354800939342E-004,-3.88004346243125053E-004,-3.65526485203434962E-004,-1.70156086036604655E-004,-1.79287874825996861E-005,-5.81143515365750362E-009,5.42107906666679161E-010,5.22982980600261733E-010,3.86179781990462923E-009,1.12423898694653218E-008,1.13504187266378099E-008,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,-1.91455536676874127E-004,-1.91363225635969467E-004,-1.90639789156248556E-004,-1.86292388049388342E-004,-1.79066080051271543E-004,-1.63937856336046953E-004,-5.81131713793344950E-005,-4.05457934159437871E-006,2.12140048342513758E-009,-1.19882214067248628E-009,2.89390599646498363E-009,-2.02887779407997491E-009,-1.41463630369198733E-009,-1.81638324309873836E-009,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} },

                {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,-0.26144658383655173,-0.21860905908164377,-0.10528800616514800,-4.31350678393108145E-002,-2.59951304658080744E-002,-1.60145680356144487E-002,2.41654386058669354E-004,2.49989444667634165E-003,3.21821168278415854E-003,-1.77304064928718546E-003,8.50740315806009124E-003,2.61832184814584030E-003,-8.79446883216507963E-002,-3.98231245498331735E-002,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,-9.06891518856634362E-004,-9.05245961124453947E-004,-8.78863664871600610E-004,-7.83841316920562566E-004,-7.10438922469966601E-004,-6.00847366987257913E-004,-3.76506450288262924E-004,-2.97808979759412752E-004,-2.75739994321376209E-004,-2.20018924259074840E-004,-1.85811857666597031E-004,-1.22275904787126573E-004,-6.34949144131576461E-005,-5.17900896291080944E-005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.66507026100411129E-005,1.66647404870565851E-005,1.70505303679442691E-005,1.91851329265260080E-005,2.20752048310480457E-005,2.75634159488464587E-005,6.03470319501803656E-005,9.84738390001348737E-005,1.23243840310970288E-004,1.73430593576650801E-004,1.43965630237155969E-004,9.43470356060857303E-005,5.29520793506646403E-005,4.47086067791299316E-005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,1.23648531017210410E-005,1.23638710226943142E-005,1.23429475684204297E-005,1.22158406742540285E-005,1.19961392035947063E-005,1.14552098588677624E-005,5.88125101811084602E-006,6.75927453284954606E-007,3.33907311032231085E-010,-7.75306930234892778E-013,2.95916611371928036E-011,-1.59071131619563384E-010,-4.98922573718851463E-010,-5.13136895353546166E-010,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                 {0,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,Double.NaN,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
                 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} }
              }
            };
            for (int i=0;i<phia.Length;i++)
            {
                double[] res = (double[])Extensions.TestMethod("TwoFluxes", "Testfd", new object[] { phia[i],nft[i], phie[i], Ks[i], phif[i], qf[i], he[i], coq[i], co1[i], nco1[i],phico1[i], phi1max[i], phii[i], co2[i], phico2[i], j[i] });
                Assert.AreEqual(f[i], res[0], 1E-7);
                Assert.AreEqual(d[i], res[1], 1E-7);
                Assert.AreEqual(q[i], res[2], 1E-7);
            }
        }

        [Test]
        public void TestCeval1()
        {
            double[] q = new double[] { 4.53446169501603435E-010 };
            double[] qd = new double[] { 0.10107106076226227 };
            double[] phi = new double[] { 3.35430149789317511E-006 };
            int[] nco1 = new int[] { 4 };
            int[] j = new int[] { 1 };
            double[][] phico1 = new double[][] { new double[] { 0, 3.35430149789317511E-006, 9.67478826642036438E-002, 2.1208696365356445, 22.137952804565430, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, } };
            double[][,] co1 = new double[][,] {new double[,] { {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,8.74052774602063209E-010,-1.85248665511608124E-002,-0.35378971695899963,-3.2629156112670898,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,-0.19926685892421606,-0.18542304604481000,-0.14663216925204117,-0.16746166099638976,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,0.25637377452443127,1.50266280148780972E-002,1.13181057659459175E-003,-6.20619050990607016E-004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                                               {0,-1.8182831589886863,-2.59390410568598314E-003,-5.32977497275661434E-005,3.51717437867255431E-006,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}} };
            for (int i = 0; i < phi.Length; i++)
            {
                double[] res = (double[])Extensions.TestMethod("TwoFluxes", "Testceval1", new object[] { phi[i], co1[i], phico1[i], j[i], nco1[i] });
                Assert.AreEqual(q[i], res[0], 1E-7);
                Assert.AreEqual(qd[i], res[1], 1E-7);
            }
        }
    }
}