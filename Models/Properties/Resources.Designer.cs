//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Models.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to           &lt;OilPalm&gt;
        ///            &lt;Name&gt;OilPalm&lt;/Name&gt;
        ///            &lt;Constant&gt;
        ///              &lt;Name&gt;cover_tot&lt;/Name&gt;
        ///              &lt;Value&gt;0.9&lt;/Value&gt;
        ///            &lt;/Constant&gt;
        ///            &lt;Constant&gt;
        ///              &lt;Name&gt;height&lt;/Name&gt;
        ///              &lt;Value&gt;10000&lt;/Value&gt;
        ///            &lt;/Constant&gt;
        ///            &lt;VariableReference&gt;
        ///              &lt;Name&gt;UnderstoryCoverMax&lt;/Name&gt;
        ///              &lt;VariableName /&gt;
        ///            &lt;/VariableReference&gt;
        ///            &lt;VariableReference&gt;
        ///              &lt;Name&gt;UnderstoryLegumeF [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OilPalm {
            get {
                return ResourceManager.GetString("OilPalm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  &lt;Plant&gt;
        ///    &lt;Name&gt;Potato&lt;/Name&gt;
        ///   &lt;CropType&gt;Potato&lt;/CropType&gt;
        ///   &lt;Cultivars&gt;
        ///     &lt;Cultivar&gt;
        ///       &lt;Name&gt;RussetBurbank&lt;/Name&gt;
        ///     &lt;/Cultivar&gt;
        ///     &lt;Cultivar&gt;
        ///       &lt;Name&gt;JerseyBenny&lt;/Name&gt;
        ///       &lt;Override&gt;
        ///         &lt;Name&gt;[Structure].MainStemFinalNodeNumber.value&lt;/Name&gt;
        ///         &lt;Value&gt;19&lt;/Value&gt;
        ///       &lt;/Override&gt;
        ///       &lt;Override&gt;
        ///         &lt;Name&gt;[Structure].BranchingRate.Potential_Branching_Rate.XYPairs.X&lt;/Name&gt;
        ///         &lt;Value&gt;0 6 7 10 11&lt;/Value&gt;
        ///       &lt;/Override&gt;
        ///       &lt;Override&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Potato {
            get {
                return ResourceManager.GetString("Potato", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Plant15&gt;
        ///  &lt;Name&gt;Wheat&lt;/Name&gt;
        ///  &lt;AutoHarvest&gt;false&lt;/AutoHarvest&gt;
        ///  &lt;CropType&gt;Wheat&lt;/CropType&gt;
        ///  &lt;EOCropFactor&gt;1.5&lt;/EOCropFactor&gt;
        ///  &lt;NSupplyPreference&gt;active&lt;/NSupplyPreference&gt;
        ///  &lt;DoRetranslocationBeforeNDemand&gt;false&lt;/DoRetranslocationBeforeNDemand&gt;
        ///  &lt;RemovedByAnimal /&gt;
        ///  &lt;Cultivars&gt;
        ///    &lt;Cultivar&gt;
        ///      &lt;Name&gt;GattonHartog&lt;/Name&gt;
        ///      &lt;Override&gt;
        ///        &lt;Name&gt;[Phenology].Vernalisation.VernSens&lt;/Name&gt;
        ///        &lt;Value&gt;2.5&lt;/Value&gt;
        ///      &lt;/Override&gt;
        ///      &lt;Override&gt;
        ///        &lt;Name&gt;[Phenology].V [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Wheat {
            get {
                return ResourceManager.GetString("Wheat", resourceCulture);
            }
        }
    }
}
